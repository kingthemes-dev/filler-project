"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tailwind-merge";
exports.ids = ["vendor-chunks/tailwind-merge"];
exports.modules = {

/***/ "(rsc)/../../node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*************************************************************!*\
  !*** ../../node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: () => (/* binding */ createTailwindMerge),\n/* harmony export */   extendTailwindMerge: () => (/* binding */ extendTailwindMerge),\n/* harmony export */   fromTheme: () => (/* binding */ fromTheme),\n/* harmony export */   getDefaultConfig: () => (/* binding */ getDefaultConfig),\n/* harmony export */   mergeConfigs: () => (/* binding */ mergeConfigs),\n/* harmony export */   twJoin: () => (/* binding */ twJoin),\n/* harmony export */   twMerge: () => (/* binding */ twMerge),\n/* harmony export */   validators: () => (/* binding */ validators)\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = (config)=>{\n    const classMap = createClassMap(config);\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config;\n    const getClassGroupId = (className)=>{\n        const classParts = className.split(CLASS_PART_SEPARATOR);\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift();\n        }\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n    };\n    const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier)=>{\n        const conflicts = conflictingClassGroups[classGroupId] || [];\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [\n                ...conflicts,\n                ...conflictingClassGroupModifiers[classGroupId]\n            ];\n        }\n        return conflicts;\n    };\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds\n    };\n};\nconst getGroupRecursive = (classParts, classPartObject)=>{\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId;\n    }\n    const currentClassPart = classParts[0];\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n    const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart;\n    }\n    if (classPartObject.validators.length === 0) {\n        return undefined;\n    }\n    const classRest = classParts.join(CLASS_PART_SEPARATOR);\n    return classPartObject.validators.find(({ validator })=>validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = (className)=>{\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n        const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property;\n        }\n    }\n};\n/**\n * Exported for testing only\n */ const createClassMap = (config)=>{\n    const { theme, classGroups } = config;\n    const classMap = {\n        nextPart: new Map(),\n        validators: []\n    };\n    for(const classGroupId in classGroups){\n        processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n    }\n    return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme)=>{\n    classGroup.forEach((classDefinition)=>{\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n            classPartObjectToEdit.classGroupId = classGroupId;\n            return;\n        }\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n                return;\n            }\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId\n            });\n            return;\n        }\n        Object.entries(classDefinition).forEach(([key, classGroup])=>{\n            processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n        });\n    });\n};\nconst getPart = (classPartObject, path)=>{\n    let currentClassPartObject = classPartObject;\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart)=>{\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: []\n            });\n        }\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n    });\n    return currentClassPartObject;\n};\nconst isThemeGetter = (func)=>func.isThemeGetter;\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = (maxCacheSize)=>{\n    if (maxCacheSize < 1) {\n        return {\n            get: ()=>undefined,\n            set: ()=>{}\n        };\n    }\n    let cacheSize = 0;\n    let cache = new Map();\n    let previousCache = new Map();\n    const update = (key, value)=>{\n        cache.set(key, value);\n        cacheSize++;\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0;\n            previousCache = cache;\n            cache = new Map();\n        }\n    };\n    return {\n        get (key) {\n            let value = cache.get(key);\n            if (value !== undefined) {\n                return value;\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value);\n                return value;\n            }\n        },\n        set (key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value);\n            } else {\n                update(key, value);\n            }\n        }\n    };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = (config)=>{\n    const { prefix, experimentalParseClassName } = config;\n    /**\n   * Parse class name into parts.\n   *\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n   */ let parseClassName = (className)=>{\n        const modifiers = [];\n        let bracketDepth = 0;\n        let parenDepth = 0;\n        let modifierStart = 0;\n        let postfixModifierPosition;\n        for(let index = 0; index < className.length; index++){\n            let currentCharacter = className[index];\n            if (bracketDepth === 0 && parenDepth === 0) {\n                if (currentCharacter === MODIFIER_SEPARATOR) {\n                    modifiers.push(className.slice(modifierStart, index));\n                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n                    continue;\n                }\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index;\n                    continue;\n                }\n            }\n            if (currentCharacter === '[') {\n                bracketDepth++;\n            } else if (currentCharacter === ']') {\n                bracketDepth--;\n            } else if (currentCharacter === '(') {\n                parenDepth++;\n            } else if (currentCharacter === ')') {\n                parenDepth--;\n            }\n        }\n        const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n        const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition\n        };\n    };\n    if (prefix) {\n        const fullPrefix = prefix + MODIFIER_SEPARATOR;\n        const parseClassNameOriginal = parseClassName;\n        parseClassName = (className)=>className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n                isExternal: true,\n                modifiers: [],\n                hasImportantModifier: false,\n                baseClassName: className,\n                maybePostfixModifierPosition: undefined\n            };\n    }\n    if (experimentalParseClassName) {\n        const parseClassNameOriginal = parseClassName;\n        parseClassName = (className)=>experimentalParseClassName({\n                className,\n                parseClassName: parseClassNameOriginal\n            });\n    }\n    return parseClassName;\n};\nconst stripImportantModifier = (baseClassName)=>{\n    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(0, baseClassName.length - 1);\n    }\n    /**\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n   */ if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(1);\n    }\n    return baseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */ const createSortModifiers = (config)=>{\n    const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map((modifier)=>[\n            modifier,\n            true\n        ]));\n    const sortModifiers = (modifiers)=>{\n        if (modifiers.length <= 1) {\n            return modifiers;\n        }\n        const sortedModifiers = [];\n        let unsortedModifiers = [];\n        modifiers.forEach((modifier)=>{\n            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n            if (isPositionSensitive) {\n                sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n                unsortedModifiers = [];\n            } else {\n                unsortedModifiers.push(modifier);\n            }\n        });\n        sortedModifiers.push(...unsortedModifiers.sort());\n        return sortedModifiers;\n    };\n    return sortModifiers;\n};\nconst createConfigUtils = (config)=>({\n        cache: createLruCache(config.cacheSize),\n        parseClassName: createParseClassName(config),\n        sortModifiers: createSortModifiers(config),\n        ...createClassGroupUtils(config)\n    });\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils)=>{\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } = configUtils;\n    /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */ const classGroupsInConflict = [];\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n    let result = '';\n    for(let index = classNames.length - 1; index >= 0; index -= 1){\n        const originalClassName = classNames[index];\n        const { isExternal, modifiers, hasImportantModifier, baseClassName, maybePostfixModifierPosition } = parseClassName(originalClassName);\n        if (isExternal) {\n            result = originalClassName + (result.length > 0 ? ' ' + result : result);\n            continue;\n        }\n        let hasPostfixModifier = !!maybePostfixModifierPosition;\n        let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n        if (!classGroupId) {\n            if (!hasPostfixModifier) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result);\n                continue;\n            }\n            classGroupId = getClassGroupId(baseClassName);\n            if (!classGroupId) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result);\n                continue;\n            }\n            hasPostfixModifier = false;\n        }\n        const variantModifier = sortModifiers(modifiers).join(':');\n        const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n        const classId = modifierId + classGroupId;\n        if (classGroupsInConflict.includes(classId)) {\n            continue;\n        }\n        classGroupsInConflict.push(classId);\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n        for(let i = 0; i < conflictGroups.length; ++i){\n            const group = conflictGroups[i];\n            classGroupsInConflict.push(modifierId + group);\n        }\n        // Tailwind class not in conflict\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n    }\n    return result;\n};\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */ function twJoin() {\n    let index = 0;\n    let argument;\n    let resolvedValue;\n    let string = '';\n    while(index < arguments.length){\n        if (argument = arguments[index++]) {\n            if (resolvedValue = toValue(argument)) {\n                string && (string += ' ');\n                string += resolvedValue;\n            }\n        }\n    }\n    return string;\n}\nconst toValue = (mix)=>{\n    if (typeof mix === 'string') {\n        return mix;\n    }\n    let resolvedValue;\n    let string = '';\n    for(let k = 0; k < mix.length; k++){\n        if (mix[k]) {\n            if (resolvedValue = toValue(mix[k])) {\n                string && (string += ' ');\n                string += resolvedValue;\n            }\n        }\n    }\n    return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n    let configUtils;\n    let cacheGet;\n    let cacheSet;\n    let functionToCall = initTailwindMerge;\n    function initTailwindMerge(classList) {\n        const config = createConfigRest.reduce((previousConfig, createConfigCurrent)=>createConfigCurrent(previousConfig), createConfigFirst());\n        configUtils = createConfigUtils(config);\n        cacheGet = configUtils.cache.get;\n        cacheSet = configUtils.cache.set;\n        functionToCall = tailwindMerge;\n        return tailwindMerge(classList);\n    }\n    function tailwindMerge(classList) {\n        const cachedResult = cacheGet(classList);\n        if (cachedResult) {\n            return cachedResult;\n        }\n        const result = mergeClassList(classList, configUtils);\n        cacheSet(classList, result);\n        return result;\n    }\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments));\n    };\n}\nconst fromTheme = (key)=>{\n    const themeGetter = (theme)=>theme[key] || [];\n    themeGetter.isThemeGetter = true;\n    return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = (value)=>fractionRegex.test(value);\nconst isNumber = (value)=>!!value && !Number.isNaN(Number(value));\nconst isInteger = (value)=>!!value && Number.isInteger(Number(value));\nconst isPercent = (value)=>value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = (value)=>tshirtUnitRegex.test(value);\nconst isAny = ()=>true;\nconst isLengthOnly = (value)=>// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = ()=>false;\nconst isShadow = (value)=>shadowRegex.test(value);\nconst isImage = (value)=>imageRegex.test(value);\nconst isAnyNonArbitrary = (value)=>!isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = (value)=>getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = (value)=>arbitraryValueRegex.test(value);\nconst isArbitraryLength = (value)=>getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = (value)=>getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = (value)=>getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = (value)=>getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = (value)=>getIsArbitraryValue(value, isLabelShadow, isShadow);\nconst isArbitraryVariable = (value)=>arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = (value)=>getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = (value)=>getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = (value)=>getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = (value)=>getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = (value)=>getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = (value)=>getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue)=>{\n    const result = arbitraryValueRegex.exec(value);\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1]);\n        }\n        return testValue(result[2]);\n    }\n    return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false)=>{\n    const result = arbitraryVariableRegex.exec(value);\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1]);\n        }\n        return shouldMatchNoLabel;\n    }\n    return false;\n};\n// Labels\nconst isLabelPosition = (label)=>label === 'position' || label === 'percentage';\nconst isLabelImage = (label)=>label === 'image' || label === 'url';\nconst isLabelSize = (label)=>label === 'length' || label === 'size' || label === 'bg-size';\nconst isLabelLength = (label)=>label === 'length';\nconst isLabelNumber = (label)=>label === 'number';\nconst isLabelFamilyName = (label)=>label === 'family-name';\nconst isLabelShadow = (label)=>label === 'shadow';\nconst validators = /*#__PURE__*/ Object.defineProperty({\n    __proto__: null,\n    isAny,\n    isAnyNonArbitrary,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isArbitraryVariable,\n    isArbitraryVariableFamilyName,\n    isArbitraryVariableImage,\n    isArbitraryVariableLength,\n    isArbitraryVariablePosition,\n    isArbitraryVariableShadow,\n    isArbitraryVariableSize,\n    isFraction,\n    isInteger,\n    isNumber,\n    isPercent,\n    isTshirtSize\n}, Symbol.toStringTag, {\n    value: 'Module'\n});\nconst getDefaultConfig = ()=>{\n    /**\n   * Theme getters for theme variable namespaces\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n   */ /***/ const themeColor = fromTheme('color');\n    const themeFont = fromTheme('font');\n    const themeText = fromTheme('text');\n    const themeFontWeight = fromTheme('font-weight');\n    const themeTracking = fromTheme('tracking');\n    const themeLeading = fromTheme('leading');\n    const themeBreakpoint = fromTheme('breakpoint');\n    const themeContainer = fromTheme('container');\n    const themeSpacing = fromTheme('spacing');\n    const themeRadius = fromTheme('radius');\n    const themeShadow = fromTheme('shadow');\n    const themeInsetShadow = fromTheme('inset-shadow');\n    const themeTextShadow = fromTheme('text-shadow');\n    const themeDropShadow = fromTheme('drop-shadow');\n    const themeBlur = fromTheme('blur');\n    const themePerspective = fromTheme('perspective');\n    const themeAspect = fromTheme('aspect');\n    const themeEase = fromTheme('ease');\n    const themeAnimate = fromTheme('animate');\n    /**\n   * Helpers to avoid repeating the same scales\n   *\n   * We use functions that create a new array every time they're called instead of static arrays.\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n   */ /***/ const scaleBreak = ()=>[\n            'auto',\n            'avoid',\n            'all',\n            'avoid-page',\n            'page',\n            'left',\n            'right',\n            'column'\n        ];\n    const scalePosition = ()=>[\n            'center',\n            'top',\n            'bottom',\n            'left',\n            'right',\n            'top-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-top',\n            'top-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-top',\n            'bottom-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-bottom',\n            'bottom-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-bottom'\n        ];\n    const scalePositionWithArbitrary = ()=>[\n            ...scalePosition(),\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleOverflow = ()=>[\n            'auto',\n            'hidden',\n            'clip',\n            'visible',\n            'scroll'\n        ];\n    const scaleOverscroll = ()=>[\n            'auto',\n            'contain',\n            'none'\n        ];\n    const scaleUnambiguousSpacing = ()=>[\n            isArbitraryVariable,\n            isArbitraryValue,\n            themeSpacing\n        ];\n    const scaleInset = ()=>[\n            isFraction,\n            'full',\n            'auto',\n            ...scaleUnambiguousSpacing()\n        ];\n    const scaleGridTemplateColsRows = ()=>[\n            isInteger,\n            'none',\n            'subgrid',\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleGridColRowStartAndEnd = ()=>[\n            'auto',\n            {\n                span: [\n                    'full',\n                    isInteger,\n                    isArbitraryVariable,\n                    isArbitraryValue\n                ]\n            },\n            isInteger,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleGridColRowStartOrEnd = ()=>[\n            isInteger,\n            'auto',\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleGridAutoColsRows = ()=>[\n            'auto',\n            'min',\n            'max',\n            'fr',\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleAlignPrimaryAxis = ()=>[\n            'start',\n            'end',\n            'center',\n            'between',\n            'around',\n            'evenly',\n            'stretch',\n            'baseline',\n            'center-safe',\n            'end-safe'\n        ];\n    const scaleAlignSecondaryAxis = ()=>[\n            'start',\n            'end',\n            'center',\n            'stretch',\n            'center-safe',\n            'end-safe'\n        ];\n    const scaleMargin = ()=>[\n            'auto',\n            ...scaleUnambiguousSpacing()\n        ];\n    const scaleSizing = ()=>[\n            isFraction,\n            'auto',\n            'full',\n            'dvw',\n            'dvh',\n            'lvw',\n            'lvh',\n            'svw',\n            'svh',\n            'min',\n            'max',\n            'fit',\n            ...scaleUnambiguousSpacing()\n        ];\n    const scaleColor = ()=>[\n            themeColor,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleBgPosition = ()=>[\n            ...scalePosition(),\n            isArbitraryVariablePosition,\n            isArbitraryPosition,\n            {\n                position: [\n                    isArbitraryVariable,\n                    isArbitraryValue\n                ]\n            }\n        ];\n    const scaleBgRepeat = ()=>[\n            'no-repeat',\n            {\n                repeat: [\n                    '',\n                    'x',\n                    'y',\n                    'space',\n                    'round'\n                ]\n            }\n        ];\n    const scaleBgSize = ()=>[\n            'auto',\n            'cover',\n            'contain',\n            isArbitraryVariableSize,\n            isArbitrarySize,\n            {\n                size: [\n                    isArbitraryVariable,\n                    isArbitraryValue\n                ]\n            }\n        ];\n    const scaleGradientStopPosition = ()=>[\n            isPercent,\n            isArbitraryVariableLength,\n            isArbitraryLength\n        ];\n    const scaleRadius = ()=>[\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            'full',\n            themeRadius,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleBorderWidth = ()=>[\n            '',\n            isNumber,\n            isArbitraryVariableLength,\n            isArbitraryLength\n        ];\n    const scaleLineStyle = ()=>[\n            'solid',\n            'dashed',\n            'dotted',\n            'double'\n        ];\n    const scaleBlendMode = ()=>[\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity'\n        ];\n    const scaleMaskImagePosition = ()=>[\n            isNumber,\n            isPercent,\n            isArbitraryVariablePosition,\n            isArbitraryPosition\n        ];\n    const scaleBlur = ()=>[\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            themeBlur,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleRotate = ()=>[\n            'none',\n            isNumber,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleScale = ()=>[\n            'none',\n            isNumber,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleSkew = ()=>[\n            isNumber,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleTranslate = ()=>[\n            isFraction,\n            'full',\n            ...scaleUnambiguousSpacing()\n        ];\n    return {\n        cacheSize: 500,\n        theme: {\n            animate: [\n                'spin',\n                'ping',\n                'pulse',\n                'bounce'\n            ],\n            aspect: [\n                'video'\n            ],\n            blur: [\n                isTshirtSize\n            ],\n            breakpoint: [\n                isTshirtSize\n            ],\n            color: [\n                isAny\n            ],\n            container: [\n                isTshirtSize\n            ],\n            'drop-shadow': [\n                isTshirtSize\n            ],\n            ease: [\n                'in',\n                'out',\n                'in-out'\n            ],\n            font: [\n                isAnyNonArbitrary\n            ],\n            'font-weight': [\n                'thin',\n                'extralight',\n                'light',\n                'normal',\n                'medium',\n                'semibold',\n                'bold',\n                'extrabold',\n                'black'\n            ],\n            'inset-shadow': [\n                isTshirtSize\n            ],\n            leading: [\n                'none',\n                'tight',\n                'snug',\n                'normal',\n                'relaxed',\n                'loose'\n            ],\n            perspective: [\n                'dramatic',\n                'near',\n                'normal',\n                'midrange',\n                'distant',\n                'none'\n            ],\n            radius: [\n                isTshirtSize\n            ],\n            shadow: [\n                isTshirtSize\n            ],\n            spacing: [\n                'px',\n                isNumber\n            ],\n            text: [\n                isTshirtSize\n            ],\n            'text-shadow': [\n                isTshirtSize\n            ],\n            tracking: [\n                'tighter',\n                'tight',\n                'normal',\n                'wide',\n                'wider',\n                'widest'\n            ]\n        },\n        classGroups: {\n            // --------------\n            // --- Layout ---\n            // --------------\n            /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */ aspect: [\n                {\n                    aspect: [\n                        'auto',\n                        'square',\n                        isFraction,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeAspect\n                    ]\n                }\n            ],\n            /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       * @deprecated since Tailwind CSS v4.0.0\n       */ container: [\n                'container'\n            ],\n            /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */ columns: [\n                {\n                    columns: [\n                        isNumber,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeContainer\n                    ]\n                }\n            ],\n            /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */ 'break-after': [\n                {\n                    'break-after': scaleBreak()\n                }\n            ],\n            /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */ 'break-before': [\n                {\n                    'break-before': scaleBreak()\n                }\n            ],\n            /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */ 'break-inside': [\n                {\n                    'break-inside': [\n                        'auto',\n                        'avoid',\n                        'avoid-page',\n                        'avoid-column'\n                    ]\n                }\n            ],\n            /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */ 'box-decoration': [\n                {\n                    'box-decoration': [\n                        'slice',\n                        'clone'\n                    ]\n                }\n            ],\n            /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */ box: [\n                {\n                    box: [\n                        'border',\n                        'content'\n                    ]\n                }\n            ],\n            /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */ display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden'\n            ],\n            /**\n       * Screen Reader Only\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\n       */ sr: [\n                'sr-only',\n                'not-sr-only'\n            ],\n            /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */ float: [\n                {\n                    float: [\n                        'right',\n                        'left',\n                        'none',\n                        'start',\n                        'end'\n                    ]\n                }\n            ],\n            /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */ clear: [\n                {\n                    clear: [\n                        'left',\n                        'right',\n                        'both',\n                        'none',\n                        'start',\n                        'end'\n                    ]\n                }\n            ],\n            /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */ isolation: [\n                'isolate',\n                'isolation-auto'\n            ],\n            /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */ 'object-fit': [\n                {\n                    object: [\n                        'contain',\n                        'cover',\n                        'fill',\n                        'none',\n                        'scale-down'\n                    ]\n                }\n            ],\n            /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */ 'object-position': [\n                {\n                    object: scalePositionWithArbitrary()\n                }\n            ],\n            /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */ overflow: [\n                {\n                    overflow: scaleOverflow()\n                }\n            ],\n            /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */ 'overflow-x': [\n                {\n                    'overflow-x': scaleOverflow()\n                }\n            ],\n            /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */ 'overflow-y': [\n                {\n                    'overflow-y': scaleOverflow()\n                }\n            ],\n            /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */ overscroll: [\n                {\n                    overscroll: scaleOverscroll()\n                }\n            ],\n            /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */ 'overscroll-x': [\n                {\n                    'overscroll-x': scaleOverscroll()\n                }\n            ],\n            /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */ 'overscroll-y': [\n                {\n                    'overscroll-y': scaleOverscroll()\n                }\n            ],\n            /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */ position: [\n                'static',\n                'fixed',\n                'absolute',\n                'relative',\n                'sticky'\n            ],\n            /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ inset: [\n                {\n                    inset: scaleInset()\n                }\n            ],\n            /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ 'inset-x': [\n                {\n                    'inset-x': scaleInset()\n                }\n            ],\n            /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ 'inset-y': [\n                {\n                    'inset-y': scaleInset()\n                }\n            ],\n            /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ start: [\n                {\n                    start: scaleInset()\n                }\n            ],\n            /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ end: [\n                {\n                    end: scaleInset()\n                }\n            ],\n            /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ top: [\n                {\n                    top: scaleInset()\n                }\n            ],\n            /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ right: [\n                {\n                    right: scaleInset()\n                }\n            ],\n            /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ bottom: [\n                {\n                    bottom: scaleInset()\n                }\n            ],\n            /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ left: [\n                {\n                    left: scaleInset()\n                }\n            ],\n            /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */ visibility: [\n                'visible',\n                'invisible',\n                'collapse'\n            ],\n            /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */ z: [\n                {\n                    z: [\n                        isInteger,\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // ------------------------\n            // --- Flexbox and Grid ---\n            // ------------------------\n            /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */ basis: [\n                {\n                    basis: [\n                        isFraction,\n                        'full',\n                        'auto',\n                        themeContainer,\n                        ...scaleUnambiguousSpacing()\n                    ]\n                }\n            ],\n            /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */ 'flex-direction': [\n                {\n                    flex: [\n                        'row',\n                        'row-reverse',\n                        'col',\n                        'col-reverse'\n                    ]\n                }\n            ],\n            /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */ 'flex-wrap': [\n                {\n                    flex: [\n                        'nowrap',\n                        'wrap',\n                        'wrap-reverse'\n                    ]\n                }\n            ],\n            /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */ flex: [\n                {\n                    flex: [\n                        isNumber,\n                        isFraction,\n                        'auto',\n                        'initial',\n                        'none',\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */ grow: [\n                {\n                    grow: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */ shrink: [\n                {\n                    shrink: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */ order: [\n                {\n                    order: [\n                        isInteger,\n                        'first',\n                        'last',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */ 'grid-cols': [\n                {\n                    'grid-cols': scaleGridTemplateColsRows()\n                }\n            ],\n            /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */ 'col-start-end': [\n                {\n                    col: scaleGridColRowStartAndEnd()\n                }\n            ],\n            /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */ 'col-start': [\n                {\n                    'col-start': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */ 'col-end': [\n                {\n                    'col-end': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */ 'grid-rows': [\n                {\n                    'grid-rows': scaleGridTemplateColsRows()\n                }\n            ],\n            /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */ 'row-start-end': [\n                {\n                    row: scaleGridColRowStartAndEnd()\n                }\n            ],\n            /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */ 'row-start': [\n                {\n                    'row-start': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */ 'row-end': [\n                {\n                    'row-end': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */ 'grid-flow': [\n                {\n                    'grid-flow': [\n                        'row',\n                        'col',\n                        'dense',\n                        'row-dense',\n                        'col-dense'\n                    ]\n                }\n            ],\n            /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */ 'auto-cols': [\n                {\n                    'auto-cols': scaleGridAutoColsRows()\n                }\n            ],\n            /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */ 'auto-rows': [\n                {\n                    'auto-rows': scaleGridAutoColsRows()\n                }\n            ],\n            /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */ gap: [\n                {\n                    gap: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */ 'gap-x': [\n                {\n                    'gap-x': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */ 'gap-y': [\n                {\n                    'gap-y': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */ 'justify-content': [\n                {\n                    justify: [\n                        ...scaleAlignPrimaryAxis(),\n                        'normal'\n                    ]\n                }\n            ],\n            /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */ 'justify-items': [\n                {\n                    'justify-items': [\n                        ...scaleAlignSecondaryAxis(),\n                        'normal'\n                    ]\n                }\n            ],\n            /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */ 'justify-self': [\n                {\n                    'justify-self': [\n                        'auto',\n                        ...scaleAlignSecondaryAxis()\n                    ]\n                }\n            ],\n            /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */ 'align-content': [\n                {\n                    content: [\n                        'normal',\n                        ...scaleAlignPrimaryAxis()\n                    ]\n                }\n            ],\n            /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */ 'align-items': [\n                {\n                    items: [\n                        ...scaleAlignSecondaryAxis(),\n                        {\n                            baseline: [\n                                '',\n                                'last'\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */ 'align-self': [\n                {\n                    self: [\n                        'auto',\n                        ...scaleAlignSecondaryAxis(),\n                        {\n                            baseline: [\n                                '',\n                                'last'\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */ 'place-content': [\n                {\n                    'place-content': scaleAlignPrimaryAxis()\n                }\n            ],\n            /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */ 'place-items': [\n                {\n                    'place-items': [\n                        ...scaleAlignSecondaryAxis(),\n                        'baseline'\n                    ]\n                }\n            ],\n            /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */ 'place-self': [\n                {\n                    'place-self': [\n                        'auto',\n                        ...scaleAlignSecondaryAxis()\n                    ]\n                }\n            ],\n            // Spacing\n            /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */ p: [\n                {\n                    p: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */ px: [\n                {\n                    px: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */ py: [\n                {\n                    py: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */ ps: [\n                {\n                    ps: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */ pe: [\n                {\n                    pe: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */ pt: [\n                {\n                    pt: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */ pr: [\n                {\n                    pr: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */ pb: [\n                {\n                    pb: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */ pl: [\n                {\n                    pl: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */ m: [\n                {\n                    m: scaleMargin()\n                }\n            ],\n            /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */ mx: [\n                {\n                    mx: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */ my: [\n                {\n                    my: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */ ms: [\n                {\n                    ms: scaleMargin()\n                }\n            ],\n            /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */ me: [\n                {\n                    me: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */ mt: [\n                {\n                    mt: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */ mr: [\n                {\n                    mr: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */ mb: [\n                {\n                    mb: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */ ml: [\n                {\n                    ml: scaleMargin()\n                }\n            ],\n            /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-x': [\n                {\n                    'space-x': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-x-reverse': [\n                'space-x-reverse'\n            ],\n            /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-y': [\n                {\n                    'space-y': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-y-reverse': [\n                'space-y-reverse'\n            ],\n            // --------------\n            // --- Sizing ---\n            // --------------\n            /**\n       * Size\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n       */ size: [\n                {\n                    size: scaleSizing()\n                }\n            ],\n            /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */ w: [\n                {\n                    w: [\n                        themeContainer,\n                        'screen',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */ 'min-w': [\n                {\n                    'min-w': [\n                        themeContainer,\n                        'screen',\n                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'none',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */ 'max-w': [\n                {\n                    'max-w': [\n                        themeContainer,\n                        'screen',\n                        'none',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'prose',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ {\n                            screen: [\n                                themeBreakpoint\n                            ]\n                        },\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */ h: [\n                {\n                    h: [\n                        'screen',\n                        'lh',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */ 'min-h': [\n                {\n                    'min-h': [\n                        'screen',\n                        'lh',\n                        'none',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */ 'max-h': [\n                {\n                    'max-h': [\n                        'screen',\n                        'lh',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            // ------------------\n            // --- Typography ---\n            // ------------------\n            /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */ 'font-size': [\n                {\n                    text: [\n                        'base',\n                        themeText,\n                        isArbitraryVariableLength,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */ 'font-smoothing': [\n                'antialiased',\n                'subpixel-antialiased'\n            ],\n            /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */ 'font-style': [\n                'italic',\n                'not-italic'\n            ],\n            /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */ 'font-weight': [\n                {\n                    font: [\n                        themeFontWeight,\n                        isArbitraryVariable,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\n       * Font Stretch\n       * @see https://tailwindcss.com/docs/font-stretch\n       */ 'font-stretch': [\n                {\n                    'font-stretch': [\n                        'ultra-condensed',\n                        'extra-condensed',\n                        'condensed',\n                        'semi-condensed',\n                        'normal',\n                        'semi-expanded',\n                        'expanded',\n                        'extra-expanded',\n                        'ultra-expanded',\n                        isPercent,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */ 'font-family': [\n                {\n                    font: [\n                        isArbitraryVariableFamilyName,\n                        isArbitraryValue,\n                        themeFont\n                    ]\n                }\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-normal': [\n                'normal-nums'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-ordinal': [\n                'ordinal'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-slashed-zero': [\n                'slashed-zero'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-figure': [\n                'lining-nums',\n                'oldstyle-nums'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-spacing': [\n                'proportional-nums',\n                'tabular-nums'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-fraction': [\n                'diagonal-fractions',\n                'stacked-fractions'\n            ],\n            /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */ tracking: [\n                {\n                    tracking: [\n                        themeTracking,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */ 'line-clamp': [\n                {\n                    'line-clamp': [\n                        isNumber,\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */ leading: [\n                {\n                    leading: [\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ themeLeading,\n                        ...scaleUnambiguousSpacing()\n                    ]\n                }\n            ],\n            /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */ 'list-image': [\n                {\n                    'list-image': [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */ 'list-style-position': [\n                {\n                    list: [\n                        'inside',\n                        'outside'\n                    ]\n                }\n            ],\n            /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */ 'list-style-type': [\n                {\n                    list: [\n                        'disc',\n                        'decimal',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */ 'text-alignment': [\n                {\n                    text: [\n                        'left',\n                        'center',\n                        'right',\n                        'justify',\n                        'start',\n                        'end'\n                    ]\n                }\n            ],\n            /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\n       */ 'placeholder-color': [\n                {\n                    placeholder: scaleColor()\n                }\n            ],\n            /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */ 'text-color': [\n                {\n                    text: scaleColor()\n                }\n            ],\n            /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */ 'text-decoration': [\n                'underline',\n                'overline',\n                'line-through',\n                'no-underline'\n            ],\n            /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */ 'text-decoration-style': [\n                {\n                    decoration: [\n                        ...scaleLineStyle(),\n                        'wavy'\n                    ]\n                }\n            ],\n            /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */ 'text-decoration-thickness': [\n                {\n                    decoration: [\n                        isNumber,\n                        'from-font',\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */ 'text-decoration-color': [\n                {\n                    decoration: scaleColor()\n                }\n            ],\n            /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */ 'underline-offset': [\n                {\n                    'underline-offset': [\n                        isNumber,\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */ 'text-transform': [\n                'uppercase',\n                'lowercase',\n                'capitalize',\n                'normal-case'\n            ],\n            /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */ 'text-overflow': [\n                'truncate',\n                'text-ellipsis',\n                'text-clip'\n            ],\n            /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */ 'text-wrap': [\n                {\n                    text: [\n                        'wrap',\n                        'nowrap',\n                        'balance',\n                        'pretty'\n                    ]\n                }\n            ],\n            /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */ indent: [\n                {\n                    indent: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */ 'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */ whitespace: [\n                {\n                    whitespace: [\n                        'normal',\n                        'nowrap',\n                        'pre',\n                        'pre-line',\n                        'pre-wrap',\n                        'break-spaces'\n                    ]\n                }\n            ],\n            /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */ break: [\n                {\n                    break: [\n                        'normal',\n                        'words',\n                        'all',\n                        'keep'\n                    ]\n                }\n            ],\n            /**\n       * Overflow Wrap\n       * @see https://tailwindcss.com/docs/overflow-wrap\n       */ wrap: [\n                {\n                    wrap: [\n                        'break-word',\n                        'anywhere',\n                        'normal'\n                    ]\n                }\n            ],\n            /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */ hyphens: [\n                {\n                    hyphens: [\n                        'none',\n                        'manual',\n                        'auto'\n                    ]\n                }\n            ],\n            /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */ content: [\n                {\n                    content: [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // -------------------\n            // --- Backgrounds ---\n            // -------------------\n            /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */ 'bg-attachment': [\n                {\n                    bg: [\n                        'fixed',\n                        'local',\n                        'scroll'\n                    ]\n                }\n            ],\n            /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */ 'bg-clip': [\n                {\n                    'bg-clip': [\n                        'border',\n                        'padding',\n                        'content',\n                        'text'\n                    ]\n                }\n            ],\n            /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */ 'bg-origin': [\n                {\n                    'bg-origin': [\n                        'border',\n                        'padding',\n                        'content'\n                    ]\n                }\n            ],\n            /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */ 'bg-position': [\n                {\n                    bg: scaleBgPosition()\n                }\n            ],\n            /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */ 'bg-repeat': [\n                {\n                    bg: scaleBgRepeat()\n                }\n            ],\n            /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */ 'bg-size': [\n                {\n                    bg: scaleBgSize()\n                }\n            ],\n            /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */ 'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        {\n                            linear: [\n                                {\n                                    to: [\n                                        't',\n                                        'tr',\n                                        'r',\n                                        'br',\n                                        'b',\n                                        'bl',\n                                        'l',\n                                        'tl'\n                                    ]\n                                },\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue\n                            ],\n                            radial: [\n                                '',\n                                isArbitraryVariable,\n                                isArbitraryValue\n                            ],\n                            conic: [\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue\n                            ]\n                        },\n                        isArbitraryVariableImage,\n                        isArbitraryImage\n                    ]\n                }\n            ],\n            /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */ 'bg-color': [\n                {\n                    bg: scaleColor()\n                }\n            ],\n            /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-from-pos': [\n                {\n                    from: scaleGradientStopPosition()\n                }\n            ],\n            /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-via-pos': [\n                {\n                    via: scaleGradientStopPosition()\n                }\n            ],\n            /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-to-pos': [\n                {\n                    to: scaleGradientStopPosition()\n                }\n            ],\n            /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-from': [\n                {\n                    from: scaleColor()\n                }\n            ],\n            /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-via': [\n                {\n                    via: scaleColor()\n                }\n            ],\n            /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-to': [\n                {\n                    to: scaleColor()\n                }\n            ],\n            // ---------------\n            // --- Borders ---\n            // ---------------\n            /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */ rounded: [\n                {\n                    rounded: scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-s': [\n                {\n                    'rounded-s': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-e': [\n                {\n                    'rounded-e': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-t': [\n                {\n                    'rounded-t': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-r': [\n                {\n                    'rounded-r': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-b': [\n                {\n                    'rounded-b': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-l': [\n                {\n                    'rounded-l': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-ss': [\n                {\n                    'rounded-ss': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-se': [\n                {\n                    'rounded-se': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-ee': [\n                {\n                    'rounded-ee': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-es': [\n                {\n                    'rounded-es': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-tl': [\n                {\n                    'rounded-tl': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-tr': [\n                {\n                    'rounded-tr': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-br': [\n                {\n                    'rounded-br': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-bl': [\n                {\n                    'rounded-bl': scaleRadius()\n                }\n            ],\n            /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w': [\n                {\n                    border: scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-x': [\n                {\n                    'border-x': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-y': [\n                {\n                    'border-y': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-s': [\n                {\n                    'border-s': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-e': [\n                {\n                    'border-e': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-t': [\n                {\n                    'border-t': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-r': [\n                {\n                    'border-r': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-b': [\n                {\n                    'border-b': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-l': [\n                {\n                    'border-l': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-x': [\n                {\n                    'divide-x': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-x-reverse': [\n                'divide-x-reverse'\n            ],\n            /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-y': [\n                {\n                    'divide-y': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-y-reverse': [\n                'divide-y-reverse'\n            ],\n            /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */ 'border-style': [\n                {\n                    border: [\n                        ...scaleLineStyle(),\n                        'hidden',\n                        'none'\n                    ]\n                }\n            ],\n            /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n       */ 'divide-style': [\n                {\n                    divide: [\n                        ...scaleLineStyle(),\n                        'hidden',\n                        'none'\n                    ]\n                }\n            ],\n            /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color': [\n                {\n                    border: scaleColor()\n                }\n            ],\n            /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-x': [\n                {\n                    'border-x': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-y': [\n                {\n                    'border-y': scaleColor()\n                }\n            ],\n            /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-s': [\n                {\n                    'border-s': scaleColor()\n                }\n            ],\n            /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-e': [\n                {\n                    'border-e': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-t': [\n                {\n                    'border-t': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-r': [\n                {\n                    'border-r': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-b': [\n                {\n                    'border-b': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-l': [\n                {\n                    'border-l': scaleColor()\n                }\n            ],\n            /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */ 'divide-color': [\n                {\n                    divide: scaleColor()\n                }\n            ],\n            /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */ 'outline-style': [\n                {\n                    outline: [\n                        ...scaleLineStyle(),\n                        'none',\n                        'hidden'\n                    ]\n                }\n            ],\n            /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */ 'outline-offset': [\n                {\n                    'outline-offset': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */ 'outline-w': [\n                {\n                    outline: [\n                        '',\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */ 'outline-color': [\n                {\n                    outline: scaleColor()\n                }\n            ],\n            // ---------------\n            // --- Effects ---\n            // ---------------\n            /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */ shadow: [\n                {\n                    shadow: [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n       */ 'shadow-color': [\n                {\n                    shadow: scaleColor()\n                }\n            ],\n            /**\n       * Inset Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n       */ 'inset-shadow': [\n                {\n                    'inset-shadow': [\n                        'none',\n                        themeInsetShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Inset Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n       */ 'inset-shadow-color': [\n                {\n                    'inset-shadow': scaleColor()\n                }\n            ],\n            /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n       */ 'ring-w': [\n                {\n                    ring: scaleBorderWidth()\n                }\n            ],\n            /**\n       * Ring Width Inset\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */ 'ring-w-inset': [\n                'ring-inset'\n            ],\n            /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n       */ 'ring-color': [\n                {\n                    ring: scaleColor()\n                }\n            ],\n            /**\n       * Ring Offset Width\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */ 'ring-offset-w': [\n                {\n                    'ring-offset': [\n                        isNumber,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Ring Offset Color\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */ 'ring-offset-color': [\n                {\n                    'ring-offset': scaleColor()\n                }\n            ],\n            /**\n       * Inset Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n       */ 'inset-ring-w': [\n                {\n                    'inset-ring': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Inset Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n       */ 'inset-ring-color': [\n                {\n                    'inset-ring': scaleColor()\n                }\n            ],\n            /**\n       * Text Shadow\n       * @see https://tailwindcss.com/docs/text-shadow\n       */ 'text-shadow': [\n                {\n                    'text-shadow': [\n                        'none',\n                        themeTextShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Text Shadow Color\n       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n       */ 'text-shadow-color': [\n                {\n                    'text-shadow': scaleColor()\n                }\n            ],\n            /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */ opacity: [\n                {\n                    opacity: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */ 'mix-blend': [\n                {\n                    'mix-blend': [\n                        ...scaleBlendMode(),\n                        'plus-darker',\n                        'plus-lighter'\n                    ]\n                }\n            ],\n            /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */ 'bg-blend': [\n                {\n                    'bg-blend': scaleBlendMode()\n                }\n            ],\n            /**\n       * Mask Clip\n       * @see https://tailwindcss.com/docs/mask-clip\n       */ 'mask-clip': [\n                {\n                    'mask-clip': [\n                        'border',\n                        'padding',\n                        'content',\n                        'fill',\n                        'stroke',\n                        'view'\n                    ]\n                },\n                'mask-no-clip'\n            ],\n            /**\n       * Mask Composite\n       * @see https://tailwindcss.com/docs/mask-composite\n       */ 'mask-composite': [\n                {\n                    mask: [\n                        'add',\n                        'subtract',\n                        'intersect',\n                        'exclude'\n                    ]\n                }\n            ],\n            /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */ 'mask-image-linear-pos': [\n                {\n                    'mask-linear': [\n                        isNumber\n                    ]\n                }\n            ],\n            'mask-image-linear-from-pos': [\n                {\n                    'mask-linear-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-linear-to-pos': [\n                {\n                    'mask-linear-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-linear-from-color': [\n                {\n                    'mask-linear-from': scaleColor()\n                }\n            ],\n            'mask-image-linear-to-color': [\n                {\n                    'mask-linear-to': scaleColor()\n                }\n            ],\n            'mask-image-t-from-pos': [\n                {\n                    'mask-t-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-t-to-pos': [\n                {\n                    'mask-t-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-t-from-color': [\n                {\n                    'mask-t-from': scaleColor()\n                }\n            ],\n            'mask-image-t-to-color': [\n                {\n                    'mask-t-to': scaleColor()\n                }\n            ],\n            'mask-image-r-from-pos': [\n                {\n                    'mask-r-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-r-to-pos': [\n                {\n                    'mask-r-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-r-from-color': [\n                {\n                    'mask-r-from': scaleColor()\n                }\n            ],\n            'mask-image-r-to-color': [\n                {\n                    'mask-r-to': scaleColor()\n                }\n            ],\n            'mask-image-b-from-pos': [\n                {\n                    'mask-b-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-b-to-pos': [\n                {\n                    'mask-b-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-b-from-color': [\n                {\n                    'mask-b-from': scaleColor()\n                }\n            ],\n            'mask-image-b-to-color': [\n                {\n                    'mask-b-to': scaleColor()\n                }\n            ],\n            'mask-image-l-from-pos': [\n                {\n                    'mask-l-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-l-to-pos': [\n                {\n                    'mask-l-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-l-from-color': [\n                {\n                    'mask-l-from': scaleColor()\n                }\n            ],\n            'mask-image-l-to-color': [\n                {\n                    'mask-l-to': scaleColor()\n                }\n            ],\n            'mask-image-x-from-pos': [\n                {\n                    'mask-x-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-x-to-pos': [\n                {\n                    'mask-x-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-x-from-color': [\n                {\n                    'mask-x-from': scaleColor()\n                }\n            ],\n            'mask-image-x-to-color': [\n                {\n                    'mask-x-to': scaleColor()\n                }\n            ],\n            'mask-image-y-from-pos': [\n                {\n                    'mask-y-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-y-to-pos': [\n                {\n                    'mask-y-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-y-from-color': [\n                {\n                    'mask-y-from': scaleColor()\n                }\n            ],\n            'mask-image-y-to-color': [\n                {\n                    'mask-y-to': scaleColor()\n                }\n            ],\n            'mask-image-radial': [\n                {\n                    'mask-radial': [\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            'mask-image-radial-from-pos': [\n                {\n                    'mask-radial-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-radial-to-pos': [\n                {\n                    'mask-radial-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-radial-from-color': [\n                {\n                    'mask-radial-from': scaleColor()\n                }\n            ],\n            'mask-image-radial-to-color': [\n                {\n                    'mask-radial-to': scaleColor()\n                }\n            ],\n            'mask-image-radial-shape': [\n                {\n                    'mask-radial': [\n                        'circle',\n                        'ellipse'\n                    ]\n                }\n            ],\n            'mask-image-radial-size': [\n                {\n                    'mask-radial': [\n                        {\n                            closest: [\n                                'side',\n                                'corner'\n                            ],\n                            farthest: [\n                                'side',\n                                'corner'\n                            ]\n                        }\n                    ]\n                }\n            ],\n            'mask-image-radial-pos': [\n                {\n                    'mask-radial-at': scalePosition()\n                }\n            ],\n            'mask-image-conic-pos': [\n                {\n                    'mask-conic': [\n                        isNumber\n                    ]\n                }\n            ],\n            'mask-image-conic-from-pos': [\n                {\n                    'mask-conic-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-conic-to-pos': [\n                {\n                    'mask-conic-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-conic-from-color': [\n                {\n                    'mask-conic-from': scaleColor()\n                }\n            ],\n            'mask-image-conic-to-color': [\n                {\n                    'mask-conic-to': scaleColor()\n                }\n            ],\n            /**\n       * Mask Mode\n       * @see https://tailwindcss.com/docs/mask-mode\n       */ 'mask-mode': [\n                {\n                    mask: [\n                        'alpha',\n                        'luminance',\n                        'match'\n                    ]\n                }\n            ],\n            /**\n       * Mask Origin\n       * @see https://tailwindcss.com/docs/mask-origin\n       */ 'mask-origin': [\n                {\n                    'mask-origin': [\n                        'border',\n                        'padding',\n                        'content',\n                        'fill',\n                        'stroke',\n                        'view'\n                    ]\n                }\n            ],\n            /**\n       * Mask Position\n       * @see https://tailwindcss.com/docs/mask-position\n       */ 'mask-position': [\n                {\n                    mask: scaleBgPosition()\n                }\n            ],\n            /**\n       * Mask Repeat\n       * @see https://tailwindcss.com/docs/mask-repeat\n       */ 'mask-repeat': [\n                {\n                    mask: scaleBgRepeat()\n                }\n            ],\n            /**\n       * Mask Size\n       * @see https://tailwindcss.com/docs/mask-size\n       */ 'mask-size': [\n                {\n                    mask: scaleBgSize()\n                }\n            ],\n            /**\n       * Mask Type\n       * @see https://tailwindcss.com/docs/mask-type\n       */ 'mask-type': [\n                {\n                    'mask-type': [\n                        'alpha',\n                        'luminance'\n                    ]\n                }\n            ],\n            /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */ 'mask-image': [\n                {\n                    mask: [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // ---------------\n            // --- Filters ---\n            // ---------------\n            /**\n       * Filter\n       * @see https://tailwindcss.com/docs/filter\n       */ filter: [\n                {\n                    filter: [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */ blur: [\n                {\n                    blur: scaleBlur()\n                }\n            ],\n            /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */ brightness: [\n                {\n                    brightness: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */ contrast: [\n                {\n                    contrast: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */ 'drop-shadow': [\n                {\n                    'drop-shadow': [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeDropShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Drop Shadow Color\n       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n       */ 'drop-shadow-color': [\n                {\n                    'drop-shadow': scaleColor()\n                }\n            ],\n            /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */ grayscale: [\n                {\n                    grayscale: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */ 'hue-rotate': [\n                {\n                    'hue-rotate': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */ invert: [\n                {\n                    invert: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */ saturate: [\n                {\n                    saturate: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */ sepia: [\n                {\n                    sepia: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Filter\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */ 'backdrop-filter': [\n                {\n                    'backdrop-filter': [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */ 'backdrop-blur': [\n                {\n                    'backdrop-blur': scaleBlur()\n                }\n            ],\n            /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */ 'backdrop-brightness': [\n                {\n                    'backdrop-brightness': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */ 'backdrop-contrast': [\n                {\n                    'backdrop-contrast': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */ 'backdrop-grayscale': [\n                {\n                    'backdrop-grayscale': [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */ 'backdrop-hue-rotate': [\n                {\n                    'backdrop-hue-rotate': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */ 'backdrop-invert': [\n                {\n                    'backdrop-invert': [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */ 'backdrop-opacity': [\n                {\n                    'backdrop-opacity': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */ 'backdrop-saturate': [\n                {\n                    'backdrop-saturate': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */ 'backdrop-sepia': [\n                {\n                    'backdrop-sepia': [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // --------------\n            // --- Tables ---\n            // --------------\n            /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */ 'border-collapse': [\n                {\n                    border: [\n                        'collapse',\n                        'separate'\n                    ]\n                }\n            ],\n            /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */ 'border-spacing': [\n                {\n                    'border-spacing': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */ 'border-spacing-x': [\n                {\n                    'border-spacing-x': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */ 'border-spacing-y': [\n                {\n                    'border-spacing-y': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */ 'table-layout': [\n                {\n                    table: [\n                        'auto',\n                        'fixed'\n                    ]\n                }\n            ],\n            /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */ caption: [\n                {\n                    caption: [\n                        'top',\n                        'bottom'\n                    ]\n                }\n            ],\n            // ---------------------------------\n            // --- Transitions and Animation ---\n            // ---------------------------------\n            /**\n       * Transition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */ transition: [\n                {\n                    transition: [\n                        '',\n                        'all',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Transition Behavior\n       * @see https://tailwindcss.com/docs/transition-behavior\n       */ 'transition-behavior': [\n                {\n                    transition: [\n                        'normal',\n                        'discrete'\n                    ]\n                }\n            ],\n            /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */ duration: [\n                {\n                    duration: [\n                        isNumber,\n                        'initial',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */ ease: [\n                {\n                    ease: [\n                        'linear',\n                        'initial',\n                        themeEase,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */ delay: [\n                {\n                    delay: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */ animate: [\n                {\n                    animate: [\n                        'none',\n                        themeAnimate,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // ------------------\n            // --- Transforms ---\n            // ------------------\n            /**\n       * Backface Visibility\n       * @see https://tailwindcss.com/docs/backface-visibility\n       */ backface: [\n                {\n                    backface: [\n                        'hidden',\n                        'visible'\n                    ]\n                }\n            ],\n            /**\n       * Perspective\n       * @see https://tailwindcss.com/docs/perspective\n       */ perspective: [\n                {\n                    perspective: [\n                        themePerspective,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Perspective Origin\n       * @see https://tailwindcss.com/docs/perspective-origin\n       */ 'perspective-origin': [\n                {\n                    'perspective-origin': scalePositionWithArbitrary()\n                }\n            ],\n            /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */ rotate: [\n                {\n                    rotate: scaleRotate()\n                }\n            ],\n            /**\n       * Rotate X\n       * @see https://tailwindcss.com/docs/rotate\n       */ 'rotate-x': [\n                {\n                    'rotate-x': scaleRotate()\n                }\n            ],\n            /**\n       * Rotate Y\n       * @see https://tailwindcss.com/docs/rotate\n       */ 'rotate-y': [\n                {\n                    'rotate-y': scaleRotate()\n                }\n            ],\n            /**\n       * Rotate Z\n       * @see https://tailwindcss.com/docs/rotate\n       */ 'rotate-z': [\n                {\n                    'rotate-z': scaleRotate()\n                }\n            ],\n            /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */ scale: [\n                {\n                    scale: scaleScale()\n                }\n            ],\n            /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-x': [\n                {\n                    'scale-x': scaleScale()\n                }\n            ],\n            /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-y': [\n                {\n                    'scale-y': scaleScale()\n                }\n            ],\n            /**\n       * Scale Z\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-z': [\n                {\n                    'scale-z': scaleScale()\n                }\n            ],\n            /**\n       * Scale 3D\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-3d': [\n                'scale-3d'\n            ],\n            /**\n       * Skew\n       * @see https://tailwindcss.com/docs/skew\n       */ skew: [\n                {\n                    skew: scaleSkew()\n                }\n            ],\n            /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */ 'skew-x': [\n                {\n                    'skew-x': scaleSkew()\n                }\n            ],\n            /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */ 'skew-y': [\n                {\n                    'skew-y': scaleSkew()\n                }\n            ],\n            /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */ transform: [\n                {\n                    transform: [\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                        '',\n                        'none',\n                        'gpu',\n                        'cpu'\n                    ]\n                }\n            ],\n            /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */ 'transform-origin': [\n                {\n                    origin: scalePositionWithArbitrary()\n                }\n            ],\n            /**\n       * Transform Style\n       * @see https://tailwindcss.com/docs/transform-style\n       */ 'transform-style': [\n                {\n                    transform: [\n                        '3d',\n                        'flat'\n                    ]\n                }\n            ],\n            /**\n       * Translate\n       * @see https://tailwindcss.com/docs/translate\n       */ translate: [\n                {\n                    translate: scaleTranslate()\n                }\n            ],\n            /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-x': [\n                {\n                    'translate-x': scaleTranslate()\n                }\n            ],\n            /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-y': [\n                {\n                    'translate-y': scaleTranslate()\n                }\n            ],\n            /**\n       * Translate Z\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-z': [\n                {\n                    'translate-z': scaleTranslate()\n                }\n            ],\n            /**\n       * Translate None\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-none': [\n                'translate-none'\n            ],\n            // ---------------------\n            // --- Interactivity ---\n            // ---------------------\n            /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */ accent: [\n                {\n                    accent: scaleColor()\n                }\n            ],\n            /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */ appearance: [\n                {\n                    appearance: [\n                        'none',\n                        'auto'\n                    ]\n                }\n            ],\n            /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */ 'caret-color': [\n                {\n                    caret: scaleColor()\n                }\n            ],\n            /**\n       * Color Scheme\n       * @see https://tailwindcss.com/docs/color-scheme\n       */ 'color-scheme': [\n                {\n                    scheme: [\n                        'normal',\n                        'dark',\n                        'light',\n                        'light-dark',\n                        'only-dark',\n                        'only-light'\n                    ]\n                }\n            ],\n            /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */ cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Field Sizing\n       * @see https://tailwindcss.com/docs/field-sizing\n       */ 'field-sizing': [\n                {\n                    'field-sizing': [\n                        'fixed',\n                        'content'\n                    ]\n                }\n            ],\n            /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */ 'pointer-events': [\n                {\n                    'pointer-events': [\n                        'auto',\n                        'none'\n                    ]\n                }\n            ],\n            /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */ resize: [\n                {\n                    resize: [\n                        'none',\n                        '',\n                        'y',\n                        'x'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */ 'scroll-behavior': [\n                {\n                    scroll: [\n                        'auto',\n                        'smooth'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-m': [\n                {\n                    'scroll-m': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mx': [\n                {\n                    'scroll-mx': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-my': [\n                {\n                    'scroll-my': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-ms': [\n                {\n                    'scroll-ms': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-me': [\n                {\n                    'scroll-me': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mt': [\n                {\n                    'scroll-mt': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mr': [\n                {\n                    'scroll-mr': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mb': [\n                {\n                    'scroll-mb': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-ml': [\n                {\n                    'scroll-ml': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-p': [\n                {\n                    'scroll-p': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-px': [\n                {\n                    'scroll-px': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-py': [\n                {\n                    'scroll-py': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-ps': [\n                {\n                    'scroll-ps': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pe': [\n                {\n                    'scroll-pe': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pt': [\n                {\n                    'scroll-pt': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pr': [\n                {\n                    'scroll-pr': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pb': [\n                {\n                    'scroll-pb': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pl': [\n                {\n                    'scroll-pl': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */ 'snap-align': [\n                {\n                    snap: [\n                        'start',\n                        'end',\n                        'center',\n                        'align-none'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */ 'snap-stop': [\n                {\n                    snap: [\n                        'normal',\n                        'always'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */ 'snap-type': [\n                {\n                    snap: [\n                        'none',\n                        'x',\n                        'y',\n                        'both'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */ 'snap-strictness': [\n                {\n                    snap: [\n                        'mandatory',\n                        'proximity'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */ touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'manipulation'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */ 'touch-x': [\n                {\n                    'touch-pan': [\n                        'x',\n                        'left',\n                        'right'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */ 'touch-y': [\n                {\n                    'touch-pan': [\n                        'y',\n                        'up',\n                        'down'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */ 'touch-pz': [\n                'touch-pinch-zoom'\n            ],\n            /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */ select: [\n                {\n                    select: [\n                        'none',\n                        'text',\n                        'all',\n                        'auto'\n                    ]\n                }\n            ],\n            /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */ 'will-change': [\n                {\n                    'will-change': [\n                        'auto',\n                        'scroll',\n                        'contents',\n                        'transform',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // -----------\n            // --- SVG ---\n            // -----------\n            /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */ fill: [\n                {\n                    fill: [\n                        'none',\n                        ...scaleColor()\n                    ]\n                }\n            ],\n            /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */ 'stroke-w': [\n                {\n                    stroke: [\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */ stroke: [\n                {\n                    stroke: [\n                        'none',\n                        ...scaleColor()\n                    ]\n                }\n            ],\n            // ---------------------\n            // --- Accessibility ---\n            // ---------------------\n            /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */ 'forced-color-adjust': [\n                {\n                    'forced-color-adjust': [\n                        'auto',\n                        'none'\n                    ]\n                }\n            ]\n        },\n        conflictingClassGroups: {\n            overflow: [\n                'overflow-x',\n                'overflow-y'\n            ],\n            overscroll: [\n                'overscroll-x',\n                'overscroll-y'\n            ],\n            inset: [\n                'inset-x',\n                'inset-y',\n                'start',\n                'end',\n                'top',\n                'right',\n                'bottom',\n                'left'\n            ],\n            'inset-x': [\n                'right',\n                'left'\n            ],\n            'inset-y': [\n                'top',\n                'bottom'\n            ],\n            flex: [\n                'basis',\n                'grow',\n                'shrink'\n            ],\n            gap: [\n                'gap-x',\n                'gap-y'\n            ],\n            p: [\n                'px',\n                'py',\n                'ps',\n                'pe',\n                'pt',\n                'pr',\n                'pb',\n                'pl'\n            ],\n            px: [\n                'pr',\n                'pl'\n            ],\n            py: [\n                'pt',\n                'pb'\n            ],\n            m: [\n                'mx',\n                'my',\n                'ms',\n                'me',\n                'mt',\n                'mr',\n                'mb',\n                'ml'\n            ],\n            mx: [\n                'mr',\n                'ml'\n            ],\n            my: [\n                'mt',\n                'mb'\n            ],\n            size: [\n                'w',\n                'h'\n            ],\n            'font-size': [\n                'leading'\n            ],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction'\n            ],\n            'fvn-ordinal': [\n                'fvn-normal'\n            ],\n            'fvn-slashed-zero': [\n                'fvn-normal'\n            ],\n            'fvn-figure': [\n                'fvn-normal'\n            ],\n            'fvn-spacing': [\n                'fvn-normal'\n            ],\n            'fvn-fraction': [\n                'fvn-normal'\n            ],\n            'line-clamp': [\n                'display',\n                'overflow'\n            ],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl'\n            ],\n            'rounded-s': [\n                'rounded-ss',\n                'rounded-es'\n            ],\n            'rounded-e': [\n                'rounded-se',\n                'rounded-ee'\n            ],\n            'rounded-t': [\n                'rounded-tl',\n                'rounded-tr'\n            ],\n            'rounded-r': [\n                'rounded-tr',\n                'rounded-br'\n            ],\n            'rounded-b': [\n                'rounded-br',\n                'rounded-bl'\n            ],\n            'rounded-l': [\n                'rounded-tl',\n                'rounded-bl'\n            ],\n            'border-spacing': [\n                'border-spacing-x',\n                'border-spacing-y'\n            ],\n            'border-w': [\n                'border-w-x',\n                'border-w-y',\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l'\n            ],\n            'border-w-x': [\n                'border-w-r',\n                'border-w-l'\n            ],\n            'border-w-y': [\n                'border-w-t',\n                'border-w-b'\n            ],\n            'border-color': [\n                'border-color-x',\n                'border-color-y',\n                'border-color-s',\n                'border-color-e',\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l'\n            ],\n            'border-color-x': [\n                'border-color-r',\n                'border-color-l'\n            ],\n            'border-color-y': [\n                'border-color-t',\n                'border-color-b'\n            ],\n            translate: [\n                'translate-x',\n                'translate-y',\n                'translate-none'\n            ],\n            'translate-none': [\n                'translate',\n                'translate-x',\n                'translate-y',\n                'translate-z'\n            ],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml'\n            ],\n            'scroll-mx': [\n                'scroll-mr',\n                'scroll-ml'\n            ],\n            'scroll-my': [\n                'scroll-mt',\n                'scroll-mb'\n            ],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl'\n            ],\n            'scroll-px': [\n                'scroll-pr',\n                'scroll-pl'\n            ],\n            'scroll-py': [\n                'scroll-pt',\n                'scroll-pb'\n            ],\n            touch: [\n                'touch-x',\n                'touch-y',\n                'touch-pz'\n            ],\n            'touch-x': [\n                'touch'\n            ],\n            'touch-y': [\n                'touch'\n            ],\n            'touch-pz': [\n                'touch'\n            ]\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': [\n                'leading'\n            ]\n        },\n        orderSensitiveModifiers: [\n            '*',\n            '**',\n            'after',\n            'backdrop',\n            'before',\n            'details-content',\n            'file',\n            'first-letter',\n            'first-line',\n            'marker',\n            'placeholder',\n            'selection'\n        ]\n    };\n};\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */ const mergeConfigs = (baseConfig, { cacheSize, prefix, experimentalParseClassName, extend = {}, override = {} })=>{\n    overrideProperty(baseConfig, 'cacheSize', cacheSize);\n    overrideProperty(baseConfig, 'prefix', prefix);\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n    overrideConfigProperties(baseConfig.theme, override.theme);\n    overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n    overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n    mergeConfigProperties(baseConfig.theme, extend.theme);\n    mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n    mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n    return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue)=>{\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue;\n    }\n};\nconst overrideConfigProperties = (baseObject, overrideObject)=>{\n    if (overrideObject) {\n        for(const key in overrideObject){\n            overrideProperty(baseObject, key, overrideObject[key]);\n        }\n    }\n};\nconst mergeConfigProperties = (baseObject, mergeObject)=>{\n    if (mergeObject) {\n        for(const key in mergeObject){\n            mergeArrayProperties(baseObject, mergeObject, key);\n        }\n    }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key)=>{\n    const mergeValue = mergeObject[key];\n    if (mergeValue !== undefined) {\n        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n    }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig)=>typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(()=>mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/ createTailwindMerge(getDefaultConfig);\n //# sourceMappingURL=bundle-mjs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/tailwind-merge/dist/bundle-mjs.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*************************************************************!*\
  !*** ../../node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: () => (/* binding */ createTailwindMerge),\n/* harmony export */   extendTailwindMerge: () => (/* binding */ extendTailwindMerge),\n/* harmony export */   fromTheme: () => (/* binding */ fromTheme),\n/* harmony export */   getDefaultConfig: () => (/* binding */ getDefaultConfig),\n/* harmony export */   mergeConfigs: () => (/* binding */ mergeConfigs),\n/* harmony export */   twJoin: () => (/* binding */ twJoin),\n/* harmony export */   twMerge: () => (/* binding */ twMerge),\n/* harmony export */   validators: () => (/* binding */ validators)\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = (config)=>{\n    const classMap = createClassMap(config);\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config;\n    const getClassGroupId = (className)=>{\n        const classParts = className.split(CLASS_PART_SEPARATOR);\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift();\n        }\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n    };\n    const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier)=>{\n        const conflicts = conflictingClassGroups[classGroupId] || [];\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [\n                ...conflicts,\n                ...conflictingClassGroupModifiers[classGroupId]\n            ];\n        }\n        return conflicts;\n    };\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds\n    };\n};\nconst getGroupRecursive = (classParts, classPartObject)=>{\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId;\n    }\n    const currentClassPart = classParts[0];\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n    const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart;\n    }\n    if (classPartObject.validators.length === 0) {\n        return undefined;\n    }\n    const classRest = classParts.join(CLASS_PART_SEPARATOR);\n    return classPartObject.validators.find(({ validator })=>validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = (className)=>{\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n        const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property;\n        }\n    }\n};\n/**\n * Exported for testing only\n */ const createClassMap = (config)=>{\n    const { theme, classGroups } = config;\n    const classMap = {\n        nextPart: new Map(),\n        validators: []\n    };\n    for(const classGroupId in classGroups){\n        processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n    }\n    return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme)=>{\n    classGroup.forEach((classDefinition)=>{\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n            classPartObjectToEdit.classGroupId = classGroupId;\n            return;\n        }\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n                return;\n            }\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId\n            });\n            return;\n        }\n        Object.entries(classDefinition).forEach(([key, classGroup])=>{\n            processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n        });\n    });\n};\nconst getPart = (classPartObject, path)=>{\n    let currentClassPartObject = classPartObject;\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart)=>{\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: []\n            });\n        }\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n    });\n    return currentClassPartObject;\n};\nconst isThemeGetter = (func)=>func.isThemeGetter;\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = (maxCacheSize)=>{\n    if (maxCacheSize < 1) {\n        return {\n            get: ()=>undefined,\n            set: ()=>{}\n        };\n    }\n    let cacheSize = 0;\n    let cache = new Map();\n    let previousCache = new Map();\n    const update = (key, value)=>{\n        cache.set(key, value);\n        cacheSize++;\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0;\n            previousCache = cache;\n            cache = new Map();\n        }\n    };\n    return {\n        get (key) {\n            let value = cache.get(key);\n            if (value !== undefined) {\n                return value;\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value);\n                return value;\n            }\n        },\n        set (key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value);\n            } else {\n                update(key, value);\n            }\n        }\n    };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = (config)=>{\n    const { prefix, experimentalParseClassName } = config;\n    /**\n   * Parse class name into parts.\n   *\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n   */ let parseClassName = (className)=>{\n        const modifiers = [];\n        let bracketDepth = 0;\n        let parenDepth = 0;\n        let modifierStart = 0;\n        let postfixModifierPosition;\n        for(let index = 0; index < className.length; index++){\n            let currentCharacter = className[index];\n            if (bracketDepth === 0 && parenDepth === 0) {\n                if (currentCharacter === MODIFIER_SEPARATOR) {\n                    modifiers.push(className.slice(modifierStart, index));\n                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n                    continue;\n                }\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index;\n                    continue;\n                }\n            }\n            if (currentCharacter === '[') {\n                bracketDepth++;\n            } else if (currentCharacter === ']') {\n                bracketDepth--;\n            } else if (currentCharacter === '(') {\n                parenDepth++;\n            } else if (currentCharacter === ')') {\n                parenDepth--;\n            }\n        }\n        const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n        const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition\n        };\n    };\n    if (prefix) {\n        const fullPrefix = prefix + MODIFIER_SEPARATOR;\n        const parseClassNameOriginal = parseClassName;\n        parseClassName = (className)=>className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n                isExternal: true,\n                modifiers: [],\n                hasImportantModifier: false,\n                baseClassName: className,\n                maybePostfixModifierPosition: undefined\n            };\n    }\n    if (experimentalParseClassName) {\n        const parseClassNameOriginal = parseClassName;\n        parseClassName = (className)=>experimentalParseClassName({\n                className,\n                parseClassName: parseClassNameOriginal\n            });\n    }\n    return parseClassName;\n};\nconst stripImportantModifier = (baseClassName)=>{\n    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(0, baseClassName.length - 1);\n    }\n    /**\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n   */ if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(1);\n    }\n    return baseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */ const createSortModifiers = (config)=>{\n    const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map((modifier)=>[\n            modifier,\n            true\n        ]));\n    const sortModifiers = (modifiers)=>{\n        if (modifiers.length <= 1) {\n            return modifiers;\n        }\n        const sortedModifiers = [];\n        let unsortedModifiers = [];\n        modifiers.forEach((modifier)=>{\n            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n            if (isPositionSensitive) {\n                sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n                unsortedModifiers = [];\n            } else {\n                unsortedModifiers.push(modifier);\n            }\n        });\n        sortedModifiers.push(...unsortedModifiers.sort());\n        return sortedModifiers;\n    };\n    return sortModifiers;\n};\nconst createConfigUtils = (config)=>({\n        cache: createLruCache(config.cacheSize),\n        parseClassName: createParseClassName(config),\n        sortModifiers: createSortModifiers(config),\n        ...createClassGroupUtils(config)\n    });\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils)=>{\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } = configUtils;\n    /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */ const classGroupsInConflict = [];\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n    let result = '';\n    for(let index = classNames.length - 1; index >= 0; index -= 1){\n        const originalClassName = classNames[index];\n        const { isExternal, modifiers, hasImportantModifier, baseClassName, maybePostfixModifierPosition } = parseClassName(originalClassName);\n        if (isExternal) {\n            result = originalClassName + (result.length > 0 ? ' ' + result : result);\n            continue;\n        }\n        let hasPostfixModifier = !!maybePostfixModifierPosition;\n        let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n        if (!classGroupId) {\n            if (!hasPostfixModifier) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result);\n                continue;\n            }\n            classGroupId = getClassGroupId(baseClassName);\n            if (!classGroupId) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result);\n                continue;\n            }\n            hasPostfixModifier = false;\n        }\n        const variantModifier = sortModifiers(modifiers).join(':');\n        const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n        const classId = modifierId + classGroupId;\n        if (classGroupsInConflict.includes(classId)) {\n            continue;\n        }\n        classGroupsInConflict.push(classId);\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n        for(let i = 0; i < conflictGroups.length; ++i){\n            const group = conflictGroups[i];\n            classGroupsInConflict.push(modifierId + group);\n        }\n        // Tailwind class not in conflict\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n    }\n    return result;\n};\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */ function twJoin() {\n    let index = 0;\n    let argument;\n    let resolvedValue;\n    let string = '';\n    while(index < arguments.length){\n        if (argument = arguments[index++]) {\n            if (resolvedValue = toValue(argument)) {\n                string && (string += ' ');\n                string += resolvedValue;\n            }\n        }\n    }\n    return string;\n}\nconst toValue = (mix)=>{\n    if (typeof mix === 'string') {\n        return mix;\n    }\n    let resolvedValue;\n    let string = '';\n    for(let k = 0; k < mix.length; k++){\n        if (mix[k]) {\n            if (resolvedValue = toValue(mix[k])) {\n                string && (string += ' ');\n                string += resolvedValue;\n            }\n        }\n    }\n    return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n    let configUtils;\n    let cacheGet;\n    let cacheSet;\n    let functionToCall = initTailwindMerge;\n    function initTailwindMerge(classList) {\n        const config = createConfigRest.reduce((previousConfig, createConfigCurrent)=>createConfigCurrent(previousConfig), createConfigFirst());\n        configUtils = createConfigUtils(config);\n        cacheGet = configUtils.cache.get;\n        cacheSet = configUtils.cache.set;\n        functionToCall = tailwindMerge;\n        return tailwindMerge(classList);\n    }\n    function tailwindMerge(classList) {\n        const cachedResult = cacheGet(classList);\n        if (cachedResult) {\n            return cachedResult;\n        }\n        const result = mergeClassList(classList, configUtils);\n        cacheSet(classList, result);\n        return result;\n    }\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments));\n    };\n}\nconst fromTheme = (key)=>{\n    const themeGetter = (theme)=>theme[key] || [];\n    themeGetter.isThemeGetter = true;\n    return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = (value)=>fractionRegex.test(value);\nconst isNumber = (value)=>!!value && !Number.isNaN(Number(value));\nconst isInteger = (value)=>!!value && Number.isInteger(Number(value));\nconst isPercent = (value)=>value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = (value)=>tshirtUnitRegex.test(value);\nconst isAny = ()=>true;\nconst isLengthOnly = (value)=>// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = ()=>false;\nconst isShadow = (value)=>shadowRegex.test(value);\nconst isImage = (value)=>imageRegex.test(value);\nconst isAnyNonArbitrary = (value)=>!isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = (value)=>getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = (value)=>arbitraryValueRegex.test(value);\nconst isArbitraryLength = (value)=>getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = (value)=>getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = (value)=>getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = (value)=>getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = (value)=>getIsArbitraryValue(value, isLabelShadow, isShadow);\nconst isArbitraryVariable = (value)=>arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = (value)=>getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = (value)=>getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = (value)=>getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = (value)=>getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = (value)=>getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = (value)=>getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue)=>{\n    const result = arbitraryValueRegex.exec(value);\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1]);\n        }\n        return testValue(result[2]);\n    }\n    return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false)=>{\n    const result = arbitraryVariableRegex.exec(value);\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1]);\n        }\n        return shouldMatchNoLabel;\n    }\n    return false;\n};\n// Labels\nconst isLabelPosition = (label)=>label === 'position' || label === 'percentage';\nconst isLabelImage = (label)=>label === 'image' || label === 'url';\nconst isLabelSize = (label)=>label === 'length' || label === 'size' || label === 'bg-size';\nconst isLabelLength = (label)=>label === 'length';\nconst isLabelNumber = (label)=>label === 'number';\nconst isLabelFamilyName = (label)=>label === 'family-name';\nconst isLabelShadow = (label)=>label === 'shadow';\nconst validators = /*#__PURE__*/ Object.defineProperty({\n    __proto__: null,\n    isAny,\n    isAnyNonArbitrary,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isArbitraryVariable,\n    isArbitraryVariableFamilyName,\n    isArbitraryVariableImage,\n    isArbitraryVariableLength,\n    isArbitraryVariablePosition,\n    isArbitraryVariableShadow,\n    isArbitraryVariableSize,\n    isFraction,\n    isInteger,\n    isNumber,\n    isPercent,\n    isTshirtSize\n}, Symbol.toStringTag, {\n    value: 'Module'\n});\nconst getDefaultConfig = ()=>{\n    /**\n   * Theme getters for theme variable namespaces\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n   */ /***/ const themeColor = fromTheme('color');\n    const themeFont = fromTheme('font');\n    const themeText = fromTheme('text');\n    const themeFontWeight = fromTheme('font-weight');\n    const themeTracking = fromTheme('tracking');\n    const themeLeading = fromTheme('leading');\n    const themeBreakpoint = fromTheme('breakpoint');\n    const themeContainer = fromTheme('container');\n    const themeSpacing = fromTheme('spacing');\n    const themeRadius = fromTheme('radius');\n    const themeShadow = fromTheme('shadow');\n    const themeInsetShadow = fromTheme('inset-shadow');\n    const themeTextShadow = fromTheme('text-shadow');\n    const themeDropShadow = fromTheme('drop-shadow');\n    const themeBlur = fromTheme('blur');\n    const themePerspective = fromTheme('perspective');\n    const themeAspect = fromTheme('aspect');\n    const themeEase = fromTheme('ease');\n    const themeAnimate = fromTheme('animate');\n    /**\n   * Helpers to avoid repeating the same scales\n   *\n   * We use functions that create a new array every time they're called instead of static arrays.\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n   */ /***/ const scaleBreak = ()=>[\n            'auto',\n            'avoid',\n            'all',\n            'avoid-page',\n            'page',\n            'left',\n            'right',\n            'column'\n        ];\n    const scalePosition = ()=>[\n            'center',\n            'top',\n            'bottom',\n            'left',\n            'right',\n            'top-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-top',\n            'top-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-top',\n            'bottom-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-bottom',\n            'bottom-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-bottom'\n        ];\n    const scalePositionWithArbitrary = ()=>[\n            ...scalePosition(),\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleOverflow = ()=>[\n            'auto',\n            'hidden',\n            'clip',\n            'visible',\n            'scroll'\n        ];\n    const scaleOverscroll = ()=>[\n            'auto',\n            'contain',\n            'none'\n        ];\n    const scaleUnambiguousSpacing = ()=>[\n            isArbitraryVariable,\n            isArbitraryValue,\n            themeSpacing\n        ];\n    const scaleInset = ()=>[\n            isFraction,\n            'full',\n            'auto',\n            ...scaleUnambiguousSpacing()\n        ];\n    const scaleGridTemplateColsRows = ()=>[\n            isInteger,\n            'none',\n            'subgrid',\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleGridColRowStartAndEnd = ()=>[\n            'auto',\n            {\n                span: [\n                    'full',\n                    isInteger,\n                    isArbitraryVariable,\n                    isArbitraryValue\n                ]\n            },\n            isInteger,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleGridColRowStartOrEnd = ()=>[\n            isInteger,\n            'auto',\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleGridAutoColsRows = ()=>[\n            'auto',\n            'min',\n            'max',\n            'fr',\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleAlignPrimaryAxis = ()=>[\n            'start',\n            'end',\n            'center',\n            'between',\n            'around',\n            'evenly',\n            'stretch',\n            'baseline',\n            'center-safe',\n            'end-safe'\n        ];\n    const scaleAlignSecondaryAxis = ()=>[\n            'start',\n            'end',\n            'center',\n            'stretch',\n            'center-safe',\n            'end-safe'\n        ];\n    const scaleMargin = ()=>[\n            'auto',\n            ...scaleUnambiguousSpacing()\n        ];\n    const scaleSizing = ()=>[\n            isFraction,\n            'auto',\n            'full',\n            'dvw',\n            'dvh',\n            'lvw',\n            'lvh',\n            'svw',\n            'svh',\n            'min',\n            'max',\n            'fit',\n            ...scaleUnambiguousSpacing()\n        ];\n    const scaleColor = ()=>[\n            themeColor,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleBgPosition = ()=>[\n            ...scalePosition(),\n            isArbitraryVariablePosition,\n            isArbitraryPosition,\n            {\n                position: [\n                    isArbitraryVariable,\n                    isArbitraryValue\n                ]\n            }\n        ];\n    const scaleBgRepeat = ()=>[\n            'no-repeat',\n            {\n                repeat: [\n                    '',\n                    'x',\n                    'y',\n                    'space',\n                    'round'\n                ]\n            }\n        ];\n    const scaleBgSize = ()=>[\n            'auto',\n            'cover',\n            'contain',\n            isArbitraryVariableSize,\n            isArbitrarySize,\n            {\n                size: [\n                    isArbitraryVariable,\n                    isArbitraryValue\n                ]\n            }\n        ];\n    const scaleGradientStopPosition = ()=>[\n            isPercent,\n            isArbitraryVariableLength,\n            isArbitraryLength\n        ];\n    const scaleRadius = ()=>[\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            'full',\n            themeRadius,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleBorderWidth = ()=>[\n            '',\n            isNumber,\n            isArbitraryVariableLength,\n            isArbitraryLength\n        ];\n    const scaleLineStyle = ()=>[\n            'solid',\n            'dashed',\n            'dotted',\n            'double'\n        ];\n    const scaleBlendMode = ()=>[\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity'\n        ];\n    const scaleMaskImagePosition = ()=>[\n            isNumber,\n            isPercent,\n            isArbitraryVariablePosition,\n            isArbitraryPosition\n        ];\n    const scaleBlur = ()=>[\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            themeBlur,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleRotate = ()=>[\n            'none',\n            isNumber,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleScale = ()=>[\n            'none',\n            isNumber,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleSkew = ()=>[\n            isNumber,\n            isArbitraryVariable,\n            isArbitraryValue\n        ];\n    const scaleTranslate = ()=>[\n            isFraction,\n            'full',\n            ...scaleUnambiguousSpacing()\n        ];\n    return {\n        cacheSize: 500,\n        theme: {\n            animate: [\n                'spin',\n                'ping',\n                'pulse',\n                'bounce'\n            ],\n            aspect: [\n                'video'\n            ],\n            blur: [\n                isTshirtSize\n            ],\n            breakpoint: [\n                isTshirtSize\n            ],\n            color: [\n                isAny\n            ],\n            container: [\n                isTshirtSize\n            ],\n            'drop-shadow': [\n                isTshirtSize\n            ],\n            ease: [\n                'in',\n                'out',\n                'in-out'\n            ],\n            font: [\n                isAnyNonArbitrary\n            ],\n            'font-weight': [\n                'thin',\n                'extralight',\n                'light',\n                'normal',\n                'medium',\n                'semibold',\n                'bold',\n                'extrabold',\n                'black'\n            ],\n            'inset-shadow': [\n                isTshirtSize\n            ],\n            leading: [\n                'none',\n                'tight',\n                'snug',\n                'normal',\n                'relaxed',\n                'loose'\n            ],\n            perspective: [\n                'dramatic',\n                'near',\n                'normal',\n                'midrange',\n                'distant',\n                'none'\n            ],\n            radius: [\n                isTshirtSize\n            ],\n            shadow: [\n                isTshirtSize\n            ],\n            spacing: [\n                'px',\n                isNumber\n            ],\n            text: [\n                isTshirtSize\n            ],\n            'text-shadow': [\n                isTshirtSize\n            ],\n            tracking: [\n                'tighter',\n                'tight',\n                'normal',\n                'wide',\n                'wider',\n                'widest'\n            ]\n        },\n        classGroups: {\n            // --------------\n            // --- Layout ---\n            // --------------\n            /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */ aspect: [\n                {\n                    aspect: [\n                        'auto',\n                        'square',\n                        isFraction,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeAspect\n                    ]\n                }\n            ],\n            /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       * @deprecated since Tailwind CSS v4.0.0\n       */ container: [\n                'container'\n            ],\n            /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */ columns: [\n                {\n                    columns: [\n                        isNumber,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeContainer\n                    ]\n                }\n            ],\n            /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */ 'break-after': [\n                {\n                    'break-after': scaleBreak()\n                }\n            ],\n            /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */ 'break-before': [\n                {\n                    'break-before': scaleBreak()\n                }\n            ],\n            /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */ 'break-inside': [\n                {\n                    'break-inside': [\n                        'auto',\n                        'avoid',\n                        'avoid-page',\n                        'avoid-column'\n                    ]\n                }\n            ],\n            /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */ 'box-decoration': [\n                {\n                    'box-decoration': [\n                        'slice',\n                        'clone'\n                    ]\n                }\n            ],\n            /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */ box: [\n                {\n                    box: [\n                        'border',\n                        'content'\n                    ]\n                }\n            ],\n            /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */ display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden'\n            ],\n            /**\n       * Screen Reader Only\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\n       */ sr: [\n                'sr-only',\n                'not-sr-only'\n            ],\n            /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */ float: [\n                {\n                    float: [\n                        'right',\n                        'left',\n                        'none',\n                        'start',\n                        'end'\n                    ]\n                }\n            ],\n            /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */ clear: [\n                {\n                    clear: [\n                        'left',\n                        'right',\n                        'both',\n                        'none',\n                        'start',\n                        'end'\n                    ]\n                }\n            ],\n            /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */ isolation: [\n                'isolate',\n                'isolation-auto'\n            ],\n            /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */ 'object-fit': [\n                {\n                    object: [\n                        'contain',\n                        'cover',\n                        'fill',\n                        'none',\n                        'scale-down'\n                    ]\n                }\n            ],\n            /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */ 'object-position': [\n                {\n                    object: scalePositionWithArbitrary()\n                }\n            ],\n            /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */ overflow: [\n                {\n                    overflow: scaleOverflow()\n                }\n            ],\n            /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */ 'overflow-x': [\n                {\n                    'overflow-x': scaleOverflow()\n                }\n            ],\n            /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */ 'overflow-y': [\n                {\n                    'overflow-y': scaleOverflow()\n                }\n            ],\n            /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */ overscroll: [\n                {\n                    overscroll: scaleOverscroll()\n                }\n            ],\n            /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */ 'overscroll-x': [\n                {\n                    'overscroll-x': scaleOverscroll()\n                }\n            ],\n            /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */ 'overscroll-y': [\n                {\n                    'overscroll-y': scaleOverscroll()\n                }\n            ],\n            /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */ position: [\n                'static',\n                'fixed',\n                'absolute',\n                'relative',\n                'sticky'\n            ],\n            /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ inset: [\n                {\n                    inset: scaleInset()\n                }\n            ],\n            /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ 'inset-x': [\n                {\n                    'inset-x': scaleInset()\n                }\n            ],\n            /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ 'inset-y': [\n                {\n                    'inset-y': scaleInset()\n                }\n            ],\n            /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ start: [\n                {\n                    start: scaleInset()\n                }\n            ],\n            /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ end: [\n                {\n                    end: scaleInset()\n                }\n            ],\n            /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ top: [\n                {\n                    top: scaleInset()\n                }\n            ],\n            /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ right: [\n                {\n                    right: scaleInset()\n                }\n            ],\n            /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ bottom: [\n                {\n                    bottom: scaleInset()\n                }\n            ],\n            /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */ left: [\n                {\n                    left: scaleInset()\n                }\n            ],\n            /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */ visibility: [\n                'visible',\n                'invisible',\n                'collapse'\n            ],\n            /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */ z: [\n                {\n                    z: [\n                        isInteger,\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // ------------------------\n            // --- Flexbox and Grid ---\n            // ------------------------\n            /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */ basis: [\n                {\n                    basis: [\n                        isFraction,\n                        'full',\n                        'auto',\n                        themeContainer,\n                        ...scaleUnambiguousSpacing()\n                    ]\n                }\n            ],\n            /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */ 'flex-direction': [\n                {\n                    flex: [\n                        'row',\n                        'row-reverse',\n                        'col',\n                        'col-reverse'\n                    ]\n                }\n            ],\n            /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */ 'flex-wrap': [\n                {\n                    flex: [\n                        'nowrap',\n                        'wrap',\n                        'wrap-reverse'\n                    ]\n                }\n            ],\n            /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */ flex: [\n                {\n                    flex: [\n                        isNumber,\n                        isFraction,\n                        'auto',\n                        'initial',\n                        'none',\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */ grow: [\n                {\n                    grow: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */ shrink: [\n                {\n                    shrink: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */ order: [\n                {\n                    order: [\n                        isInteger,\n                        'first',\n                        'last',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */ 'grid-cols': [\n                {\n                    'grid-cols': scaleGridTemplateColsRows()\n                }\n            ],\n            /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */ 'col-start-end': [\n                {\n                    col: scaleGridColRowStartAndEnd()\n                }\n            ],\n            /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */ 'col-start': [\n                {\n                    'col-start': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */ 'col-end': [\n                {\n                    'col-end': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */ 'grid-rows': [\n                {\n                    'grid-rows': scaleGridTemplateColsRows()\n                }\n            ],\n            /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */ 'row-start-end': [\n                {\n                    row: scaleGridColRowStartAndEnd()\n                }\n            ],\n            /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */ 'row-start': [\n                {\n                    'row-start': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */ 'row-end': [\n                {\n                    'row-end': scaleGridColRowStartOrEnd()\n                }\n            ],\n            /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */ 'grid-flow': [\n                {\n                    'grid-flow': [\n                        'row',\n                        'col',\n                        'dense',\n                        'row-dense',\n                        'col-dense'\n                    ]\n                }\n            ],\n            /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */ 'auto-cols': [\n                {\n                    'auto-cols': scaleGridAutoColsRows()\n                }\n            ],\n            /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */ 'auto-rows': [\n                {\n                    'auto-rows': scaleGridAutoColsRows()\n                }\n            ],\n            /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */ gap: [\n                {\n                    gap: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */ 'gap-x': [\n                {\n                    'gap-x': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */ 'gap-y': [\n                {\n                    'gap-y': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */ 'justify-content': [\n                {\n                    justify: [\n                        ...scaleAlignPrimaryAxis(),\n                        'normal'\n                    ]\n                }\n            ],\n            /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */ 'justify-items': [\n                {\n                    'justify-items': [\n                        ...scaleAlignSecondaryAxis(),\n                        'normal'\n                    ]\n                }\n            ],\n            /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */ 'justify-self': [\n                {\n                    'justify-self': [\n                        'auto',\n                        ...scaleAlignSecondaryAxis()\n                    ]\n                }\n            ],\n            /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */ 'align-content': [\n                {\n                    content: [\n                        'normal',\n                        ...scaleAlignPrimaryAxis()\n                    ]\n                }\n            ],\n            /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */ 'align-items': [\n                {\n                    items: [\n                        ...scaleAlignSecondaryAxis(),\n                        {\n                            baseline: [\n                                '',\n                                'last'\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */ 'align-self': [\n                {\n                    self: [\n                        'auto',\n                        ...scaleAlignSecondaryAxis(),\n                        {\n                            baseline: [\n                                '',\n                                'last'\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */ 'place-content': [\n                {\n                    'place-content': scaleAlignPrimaryAxis()\n                }\n            ],\n            /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */ 'place-items': [\n                {\n                    'place-items': [\n                        ...scaleAlignSecondaryAxis(),\n                        'baseline'\n                    ]\n                }\n            ],\n            /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */ 'place-self': [\n                {\n                    'place-self': [\n                        'auto',\n                        ...scaleAlignSecondaryAxis()\n                    ]\n                }\n            ],\n            // Spacing\n            /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */ p: [\n                {\n                    p: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */ px: [\n                {\n                    px: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */ py: [\n                {\n                    py: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */ ps: [\n                {\n                    ps: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */ pe: [\n                {\n                    pe: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */ pt: [\n                {\n                    pt: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */ pr: [\n                {\n                    pr: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */ pb: [\n                {\n                    pb: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */ pl: [\n                {\n                    pl: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */ m: [\n                {\n                    m: scaleMargin()\n                }\n            ],\n            /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */ mx: [\n                {\n                    mx: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */ my: [\n                {\n                    my: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */ ms: [\n                {\n                    ms: scaleMargin()\n                }\n            ],\n            /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */ me: [\n                {\n                    me: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */ mt: [\n                {\n                    mt: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */ mr: [\n                {\n                    mr: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */ mb: [\n                {\n                    mb: scaleMargin()\n                }\n            ],\n            /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */ ml: [\n                {\n                    ml: scaleMargin()\n                }\n            ],\n            /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-x': [\n                {\n                    'space-x': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-x-reverse': [\n                'space-x-reverse'\n            ],\n            /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-y': [\n                {\n                    'space-y': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */ 'space-y-reverse': [\n                'space-y-reverse'\n            ],\n            // --------------\n            // --- Sizing ---\n            // --------------\n            /**\n       * Size\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n       */ size: [\n                {\n                    size: scaleSizing()\n                }\n            ],\n            /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */ w: [\n                {\n                    w: [\n                        themeContainer,\n                        'screen',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */ 'min-w': [\n                {\n                    'min-w': [\n                        themeContainer,\n                        'screen',\n                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'none',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */ 'max-w': [\n                {\n                    'max-w': [\n                        themeContainer,\n                        'screen',\n                        'none',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'prose',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ {\n                            screen: [\n                                themeBreakpoint\n                            ]\n                        },\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */ h: [\n                {\n                    h: [\n                        'screen',\n                        'lh',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */ 'min-h': [\n                {\n                    'min-h': [\n                        'screen',\n                        'lh',\n                        'none',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */ 'max-h': [\n                {\n                    'max-h': [\n                        'screen',\n                        'lh',\n                        ...scaleSizing()\n                    ]\n                }\n            ],\n            // ------------------\n            // --- Typography ---\n            // ------------------\n            /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */ 'font-size': [\n                {\n                    text: [\n                        'base',\n                        themeText,\n                        isArbitraryVariableLength,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */ 'font-smoothing': [\n                'antialiased',\n                'subpixel-antialiased'\n            ],\n            /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */ 'font-style': [\n                'italic',\n                'not-italic'\n            ],\n            /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */ 'font-weight': [\n                {\n                    font: [\n                        themeFontWeight,\n                        isArbitraryVariable,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\n       * Font Stretch\n       * @see https://tailwindcss.com/docs/font-stretch\n       */ 'font-stretch': [\n                {\n                    'font-stretch': [\n                        'ultra-condensed',\n                        'extra-condensed',\n                        'condensed',\n                        'semi-condensed',\n                        'normal',\n                        'semi-expanded',\n                        'expanded',\n                        'extra-expanded',\n                        'ultra-expanded',\n                        isPercent,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */ 'font-family': [\n                {\n                    font: [\n                        isArbitraryVariableFamilyName,\n                        isArbitraryValue,\n                        themeFont\n                    ]\n                }\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-normal': [\n                'normal-nums'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-ordinal': [\n                'ordinal'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-slashed-zero': [\n                'slashed-zero'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-figure': [\n                'lining-nums',\n                'oldstyle-nums'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-spacing': [\n                'proportional-nums',\n                'tabular-nums'\n            ],\n            /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */ 'fvn-fraction': [\n                'diagonal-fractions',\n                'stacked-fractions'\n            ],\n            /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */ tracking: [\n                {\n                    tracking: [\n                        themeTracking,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */ 'line-clamp': [\n                {\n                    'line-clamp': [\n                        isNumber,\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */ leading: [\n                {\n                    leading: [\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ themeLeading,\n                        ...scaleUnambiguousSpacing()\n                    ]\n                }\n            ],\n            /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */ 'list-image': [\n                {\n                    'list-image': [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */ 'list-style-position': [\n                {\n                    list: [\n                        'inside',\n                        'outside'\n                    ]\n                }\n            ],\n            /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */ 'list-style-type': [\n                {\n                    list: [\n                        'disc',\n                        'decimal',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */ 'text-alignment': [\n                {\n                    text: [\n                        'left',\n                        'center',\n                        'right',\n                        'justify',\n                        'start',\n                        'end'\n                    ]\n                }\n            ],\n            /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\n       */ 'placeholder-color': [\n                {\n                    placeholder: scaleColor()\n                }\n            ],\n            /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */ 'text-color': [\n                {\n                    text: scaleColor()\n                }\n            ],\n            /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */ 'text-decoration': [\n                'underline',\n                'overline',\n                'line-through',\n                'no-underline'\n            ],\n            /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */ 'text-decoration-style': [\n                {\n                    decoration: [\n                        ...scaleLineStyle(),\n                        'wavy'\n                    ]\n                }\n            ],\n            /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */ 'text-decoration-thickness': [\n                {\n                    decoration: [\n                        isNumber,\n                        'from-font',\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */ 'text-decoration-color': [\n                {\n                    decoration: scaleColor()\n                }\n            ],\n            /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */ 'underline-offset': [\n                {\n                    'underline-offset': [\n                        isNumber,\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */ 'text-transform': [\n                'uppercase',\n                'lowercase',\n                'capitalize',\n                'normal-case'\n            ],\n            /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */ 'text-overflow': [\n                'truncate',\n                'text-ellipsis',\n                'text-clip'\n            ],\n            /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */ 'text-wrap': [\n                {\n                    text: [\n                        'wrap',\n                        'nowrap',\n                        'balance',\n                        'pretty'\n                    ]\n                }\n            ],\n            /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */ indent: [\n                {\n                    indent: scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */ 'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */ whitespace: [\n                {\n                    whitespace: [\n                        'normal',\n                        'nowrap',\n                        'pre',\n                        'pre-line',\n                        'pre-wrap',\n                        'break-spaces'\n                    ]\n                }\n            ],\n            /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */ break: [\n                {\n                    break: [\n                        'normal',\n                        'words',\n                        'all',\n                        'keep'\n                    ]\n                }\n            ],\n            /**\n       * Overflow Wrap\n       * @see https://tailwindcss.com/docs/overflow-wrap\n       */ wrap: [\n                {\n                    wrap: [\n                        'break-word',\n                        'anywhere',\n                        'normal'\n                    ]\n                }\n            ],\n            /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */ hyphens: [\n                {\n                    hyphens: [\n                        'none',\n                        'manual',\n                        'auto'\n                    ]\n                }\n            ],\n            /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */ content: [\n                {\n                    content: [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // -------------------\n            // --- Backgrounds ---\n            // -------------------\n            /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */ 'bg-attachment': [\n                {\n                    bg: [\n                        'fixed',\n                        'local',\n                        'scroll'\n                    ]\n                }\n            ],\n            /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */ 'bg-clip': [\n                {\n                    'bg-clip': [\n                        'border',\n                        'padding',\n                        'content',\n                        'text'\n                    ]\n                }\n            ],\n            /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */ 'bg-origin': [\n                {\n                    'bg-origin': [\n                        'border',\n                        'padding',\n                        'content'\n                    ]\n                }\n            ],\n            /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */ 'bg-position': [\n                {\n                    bg: scaleBgPosition()\n                }\n            ],\n            /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */ 'bg-repeat': [\n                {\n                    bg: scaleBgRepeat()\n                }\n            ],\n            /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */ 'bg-size': [\n                {\n                    bg: scaleBgSize()\n                }\n            ],\n            /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */ 'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        {\n                            linear: [\n                                {\n                                    to: [\n                                        't',\n                                        'tr',\n                                        'r',\n                                        'br',\n                                        'b',\n                                        'bl',\n                                        'l',\n                                        'tl'\n                                    ]\n                                },\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue\n                            ],\n                            radial: [\n                                '',\n                                isArbitraryVariable,\n                                isArbitraryValue\n                            ],\n                            conic: [\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue\n                            ]\n                        },\n                        isArbitraryVariableImage,\n                        isArbitraryImage\n                    ]\n                }\n            ],\n            /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */ 'bg-color': [\n                {\n                    bg: scaleColor()\n                }\n            ],\n            /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-from-pos': [\n                {\n                    from: scaleGradientStopPosition()\n                }\n            ],\n            /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-via-pos': [\n                {\n                    via: scaleGradientStopPosition()\n                }\n            ],\n            /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-to-pos': [\n                {\n                    to: scaleGradientStopPosition()\n                }\n            ],\n            /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-from': [\n                {\n                    from: scaleColor()\n                }\n            ],\n            /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-via': [\n                {\n                    via: scaleColor()\n                }\n            ],\n            /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */ 'gradient-to': [\n                {\n                    to: scaleColor()\n                }\n            ],\n            // ---------------\n            // --- Borders ---\n            // ---------------\n            /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */ rounded: [\n                {\n                    rounded: scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-s': [\n                {\n                    'rounded-s': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-e': [\n                {\n                    'rounded-e': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-t': [\n                {\n                    'rounded-t': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-r': [\n                {\n                    'rounded-r': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-b': [\n                {\n                    'rounded-b': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-l': [\n                {\n                    'rounded-l': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-ss': [\n                {\n                    'rounded-ss': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-se': [\n                {\n                    'rounded-se': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-ee': [\n                {\n                    'rounded-ee': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-es': [\n                {\n                    'rounded-es': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-tl': [\n                {\n                    'rounded-tl': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-tr': [\n                {\n                    'rounded-tr': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-br': [\n                {\n                    'rounded-br': scaleRadius()\n                }\n            ],\n            /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */ 'rounded-bl': [\n                {\n                    'rounded-bl': scaleRadius()\n                }\n            ],\n            /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w': [\n                {\n                    border: scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-x': [\n                {\n                    'border-x': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-y': [\n                {\n                    'border-y': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-s': [\n                {\n                    'border-s': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-e': [\n                {\n                    'border-e': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-t': [\n                {\n                    'border-t': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-r': [\n                {\n                    'border-r': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-b': [\n                {\n                    'border-b': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */ 'border-w-l': [\n                {\n                    'border-l': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-x': [\n                {\n                    'divide-x': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-x-reverse': [\n                'divide-x-reverse'\n            ],\n            /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-y': [\n                {\n                    'divide-y': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */ 'divide-y-reverse': [\n                'divide-y-reverse'\n            ],\n            /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */ 'border-style': [\n                {\n                    border: [\n                        ...scaleLineStyle(),\n                        'hidden',\n                        'none'\n                    ]\n                }\n            ],\n            /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n       */ 'divide-style': [\n                {\n                    divide: [\n                        ...scaleLineStyle(),\n                        'hidden',\n                        'none'\n                    ]\n                }\n            ],\n            /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color': [\n                {\n                    border: scaleColor()\n                }\n            ],\n            /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-x': [\n                {\n                    'border-x': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-y': [\n                {\n                    'border-y': scaleColor()\n                }\n            ],\n            /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-s': [\n                {\n                    'border-s': scaleColor()\n                }\n            ],\n            /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-e': [\n                {\n                    'border-e': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-t': [\n                {\n                    'border-t': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-r': [\n                {\n                    'border-r': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-b': [\n                {\n                    'border-b': scaleColor()\n                }\n            ],\n            /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */ 'border-color-l': [\n                {\n                    'border-l': scaleColor()\n                }\n            ],\n            /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */ 'divide-color': [\n                {\n                    divide: scaleColor()\n                }\n            ],\n            /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */ 'outline-style': [\n                {\n                    outline: [\n                        ...scaleLineStyle(),\n                        'none',\n                        'hidden'\n                    ]\n                }\n            ],\n            /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */ 'outline-offset': [\n                {\n                    'outline-offset': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */ 'outline-w': [\n                {\n                    outline: [\n                        '',\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */ 'outline-color': [\n                {\n                    outline: scaleColor()\n                }\n            ],\n            // ---------------\n            // --- Effects ---\n            // ---------------\n            /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */ shadow: [\n                {\n                    shadow: [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n       */ 'shadow-color': [\n                {\n                    shadow: scaleColor()\n                }\n            ],\n            /**\n       * Inset Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n       */ 'inset-shadow': [\n                {\n                    'inset-shadow': [\n                        'none',\n                        themeInsetShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Inset Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n       */ 'inset-shadow-color': [\n                {\n                    'inset-shadow': scaleColor()\n                }\n            ],\n            /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n       */ 'ring-w': [\n                {\n                    ring: scaleBorderWidth()\n                }\n            ],\n            /**\n       * Ring Width Inset\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */ 'ring-w-inset': [\n                'ring-inset'\n            ],\n            /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n       */ 'ring-color': [\n                {\n                    ring: scaleColor()\n                }\n            ],\n            /**\n       * Ring Offset Width\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */ 'ring-offset-w': [\n                {\n                    'ring-offset': [\n                        isNumber,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\n       * Ring Offset Color\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */ 'ring-offset-color': [\n                {\n                    'ring-offset': scaleColor()\n                }\n            ],\n            /**\n       * Inset Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n       */ 'inset-ring-w': [\n                {\n                    'inset-ring': scaleBorderWidth()\n                }\n            ],\n            /**\n       * Inset Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n       */ 'inset-ring-color': [\n                {\n                    'inset-ring': scaleColor()\n                }\n            ],\n            /**\n       * Text Shadow\n       * @see https://tailwindcss.com/docs/text-shadow\n       */ 'text-shadow': [\n                {\n                    'text-shadow': [\n                        'none',\n                        themeTextShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Text Shadow Color\n       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n       */ 'text-shadow-color': [\n                {\n                    'text-shadow': scaleColor()\n                }\n            ],\n            /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */ opacity: [\n                {\n                    opacity: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */ 'mix-blend': [\n                {\n                    'mix-blend': [\n                        ...scaleBlendMode(),\n                        'plus-darker',\n                        'plus-lighter'\n                    ]\n                }\n            ],\n            /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */ 'bg-blend': [\n                {\n                    'bg-blend': scaleBlendMode()\n                }\n            ],\n            /**\n       * Mask Clip\n       * @see https://tailwindcss.com/docs/mask-clip\n       */ 'mask-clip': [\n                {\n                    'mask-clip': [\n                        'border',\n                        'padding',\n                        'content',\n                        'fill',\n                        'stroke',\n                        'view'\n                    ]\n                },\n                'mask-no-clip'\n            ],\n            /**\n       * Mask Composite\n       * @see https://tailwindcss.com/docs/mask-composite\n       */ 'mask-composite': [\n                {\n                    mask: [\n                        'add',\n                        'subtract',\n                        'intersect',\n                        'exclude'\n                    ]\n                }\n            ],\n            /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */ 'mask-image-linear-pos': [\n                {\n                    'mask-linear': [\n                        isNumber\n                    ]\n                }\n            ],\n            'mask-image-linear-from-pos': [\n                {\n                    'mask-linear-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-linear-to-pos': [\n                {\n                    'mask-linear-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-linear-from-color': [\n                {\n                    'mask-linear-from': scaleColor()\n                }\n            ],\n            'mask-image-linear-to-color': [\n                {\n                    'mask-linear-to': scaleColor()\n                }\n            ],\n            'mask-image-t-from-pos': [\n                {\n                    'mask-t-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-t-to-pos': [\n                {\n                    'mask-t-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-t-from-color': [\n                {\n                    'mask-t-from': scaleColor()\n                }\n            ],\n            'mask-image-t-to-color': [\n                {\n                    'mask-t-to': scaleColor()\n                }\n            ],\n            'mask-image-r-from-pos': [\n                {\n                    'mask-r-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-r-to-pos': [\n                {\n                    'mask-r-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-r-from-color': [\n                {\n                    'mask-r-from': scaleColor()\n                }\n            ],\n            'mask-image-r-to-color': [\n                {\n                    'mask-r-to': scaleColor()\n                }\n            ],\n            'mask-image-b-from-pos': [\n                {\n                    'mask-b-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-b-to-pos': [\n                {\n                    'mask-b-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-b-from-color': [\n                {\n                    'mask-b-from': scaleColor()\n                }\n            ],\n            'mask-image-b-to-color': [\n                {\n                    'mask-b-to': scaleColor()\n                }\n            ],\n            'mask-image-l-from-pos': [\n                {\n                    'mask-l-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-l-to-pos': [\n                {\n                    'mask-l-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-l-from-color': [\n                {\n                    'mask-l-from': scaleColor()\n                }\n            ],\n            'mask-image-l-to-color': [\n                {\n                    'mask-l-to': scaleColor()\n                }\n            ],\n            'mask-image-x-from-pos': [\n                {\n                    'mask-x-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-x-to-pos': [\n                {\n                    'mask-x-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-x-from-color': [\n                {\n                    'mask-x-from': scaleColor()\n                }\n            ],\n            'mask-image-x-to-color': [\n                {\n                    'mask-x-to': scaleColor()\n                }\n            ],\n            'mask-image-y-from-pos': [\n                {\n                    'mask-y-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-y-to-pos': [\n                {\n                    'mask-y-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-y-from-color': [\n                {\n                    'mask-y-from': scaleColor()\n                }\n            ],\n            'mask-image-y-to-color': [\n                {\n                    'mask-y-to': scaleColor()\n                }\n            ],\n            'mask-image-radial': [\n                {\n                    'mask-radial': [\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            'mask-image-radial-from-pos': [\n                {\n                    'mask-radial-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-radial-to-pos': [\n                {\n                    'mask-radial-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-radial-from-color': [\n                {\n                    'mask-radial-from': scaleColor()\n                }\n            ],\n            'mask-image-radial-to-color': [\n                {\n                    'mask-radial-to': scaleColor()\n                }\n            ],\n            'mask-image-radial-shape': [\n                {\n                    'mask-radial': [\n                        'circle',\n                        'ellipse'\n                    ]\n                }\n            ],\n            'mask-image-radial-size': [\n                {\n                    'mask-radial': [\n                        {\n                            closest: [\n                                'side',\n                                'corner'\n                            ],\n                            farthest: [\n                                'side',\n                                'corner'\n                            ]\n                        }\n                    ]\n                }\n            ],\n            'mask-image-radial-pos': [\n                {\n                    'mask-radial-at': scalePosition()\n                }\n            ],\n            'mask-image-conic-pos': [\n                {\n                    'mask-conic': [\n                        isNumber\n                    ]\n                }\n            ],\n            'mask-image-conic-from-pos': [\n                {\n                    'mask-conic-from': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-conic-to-pos': [\n                {\n                    'mask-conic-to': scaleMaskImagePosition()\n                }\n            ],\n            'mask-image-conic-from-color': [\n                {\n                    'mask-conic-from': scaleColor()\n                }\n            ],\n            'mask-image-conic-to-color': [\n                {\n                    'mask-conic-to': scaleColor()\n                }\n            ],\n            /**\n       * Mask Mode\n       * @see https://tailwindcss.com/docs/mask-mode\n       */ 'mask-mode': [\n                {\n                    mask: [\n                        'alpha',\n                        'luminance',\n                        'match'\n                    ]\n                }\n            ],\n            /**\n       * Mask Origin\n       * @see https://tailwindcss.com/docs/mask-origin\n       */ 'mask-origin': [\n                {\n                    'mask-origin': [\n                        'border',\n                        'padding',\n                        'content',\n                        'fill',\n                        'stroke',\n                        'view'\n                    ]\n                }\n            ],\n            /**\n       * Mask Position\n       * @see https://tailwindcss.com/docs/mask-position\n       */ 'mask-position': [\n                {\n                    mask: scaleBgPosition()\n                }\n            ],\n            /**\n       * Mask Repeat\n       * @see https://tailwindcss.com/docs/mask-repeat\n       */ 'mask-repeat': [\n                {\n                    mask: scaleBgRepeat()\n                }\n            ],\n            /**\n       * Mask Size\n       * @see https://tailwindcss.com/docs/mask-size\n       */ 'mask-size': [\n                {\n                    mask: scaleBgSize()\n                }\n            ],\n            /**\n       * Mask Type\n       * @see https://tailwindcss.com/docs/mask-type\n       */ 'mask-type': [\n                {\n                    'mask-type': [\n                        'alpha',\n                        'luminance'\n                    ]\n                }\n            ],\n            /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */ 'mask-image': [\n                {\n                    mask: [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // ---------------\n            // --- Filters ---\n            // ---------------\n            /**\n       * Filter\n       * @see https://tailwindcss.com/docs/filter\n       */ filter: [\n                {\n                    filter: [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */ blur: [\n                {\n                    blur: scaleBlur()\n                }\n            ],\n            /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */ brightness: [\n                {\n                    brightness: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */ contrast: [\n                {\n                    contrast: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */ 'drop-shadow': [\n                {\n                    'drop-shadow': [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeDropShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\n       * Drop Shadow Color\n       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n       */ 'drop-shadow-color': [\n                {\n                    'drop-shadow': scaleColor()\n                }\n            ],\n            /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */ grayscale: [\n                {\n                    grayscale: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */ 'hue-rotate': [\n                {\n                    'hue-rotate': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */ invert: [\n                {\n                    invert: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */ saturate: [\n                {\n                    saturate: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */ sepia: [\n                {\n                    sepia: [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Filter\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */ 'backdrop-filter': [\n                {\n                    'backdrop-filter': [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */ 'backdrop-blur': [\n                {\n                    'backdrop-blur': scaleBlur()\n                }\n            ],\n            /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */ 'backdrop-brightness': [\n                {\n                    'backdrop-brightness': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */ 'backdrop-contrast': [\n                {\n                    'backdrop-contrast': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */ 'backdrop-grayscale': [\n                {\n                    'backdrop-grayscale': [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */ 'backdrop-hue-rotate': [\n                {\n                    'backdrop-hue-rotate': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */ 'backdrop-invert': [\n                {\n                    'backdrop-invert': [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */ 'backdrop-opacity': [\n                {\n                    'backdrop-opacity': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */ 'backdrop-saturate': [\n                {\n                    'backdrop-saturate': [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */ 'backdrop-sepia': [\n                {\n                    'backdrop-sepia': [\n                        '',\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // --------------\n            // --- Tables ---\n            // --------------\n            /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */ 'border-collapse': [\n                {\n                    border: [\n                        'collapse',\n                        'separate'\n                    ]\n                }\n            ],\n            /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */ 'border-spacing': [\n                {\n                    'border-spacing': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */ 'border-spacing-x': [\n                {\n                    'border-spacing-x': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */ 'border-spacing-y': [\n                {\n                    'border-spacing-y': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */ 'table-layout': [\n                {\n                    table: [\n                        'auto',\n                        'fixed'\n                    ]\n                }\n            ],\n            /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */ caption: [\n                {\n                    caption: [\n                        'top',\n                        'bottom'\n                    ]\n                }\n            ],\n            // ---------------------------------\n            // --- Transitions and Animation ---\n            // ---------------------------------\n            /**\n       * Transition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */ transition: [\n                {\n                    transition: [\n                        '',\n                        'all',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Transition Behavior\n       * @see https://tailwindcss.com/docs/transition-behavior\n       */ 'transition-behavior': [\n                {\n                    transition: [\n                        'normal',\n                        'discrete'\n                    ]\n                }\n            ],\n            /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */ duration: [\n                {\n                    duration: [\n                        isNumber,\n                        'initial',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */ ease: [\n                {\n                    ease: [\n                        'linear',\n                        'initial',\n                        themeEase,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */ delay: [\n                {\n                    delay: [\n                        isNumber,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */ animate: [\n                {\n                    animate: [\n                        'none',\n                        themeAnimate,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // ------------------\n            // --- Transforms ---\n            // ------------------\n            /**\n       * Backface Visibility\n       * @see https://tailwindcss.com/docs/backface-visibility\n       */ backface: [\n                {\n                    backface: [\n                        'hidden',\n                        'visible'\n                    ]\n                }\n            ],\n            /**\n       * Perspective\n       * @see https://tailwindcss.com/docs/perspective\n       */ perspective: [\n                {\n                    perspective: [\n                        themePerspective,\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Perspective Origin\n       * @see https://tailwindcss.com/docs/perspective-origin\n       */ 'perspective-origin': [\n                {\n                    'perspective-origin': scalePositionWithArbitrary()\n                }\n            ],\n            /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */ rotate: [\n                {\n                    rotate: scaleRotate()\n                }\n            ],\n            /**\n       * Rotate X\n       * @see https://tailwindcss.com/docs/rotate\n       */ 'rotate-x': [\n                {\n                    'rotate-x': scaleRotate()\n                }\n            ],\n            /**\n       * Rotate Y\n       * @see https://tailwindcss.com/docs/rotate\n       */ 'rotate-y': [\n                {\n                    'rotate-y': scaleRotate()\n                }\n            ],\n            /**\n       * Rotate Z\n       * @see https://tailwindcss.com/docs/rotate\n       */ 'rotate-z': [\n                {\n                    'rotate-z': scaleRotate()\n                }\n            ],\n            /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */ scale: [\n                {\n                    scale: scaleScale()\n                }\n            ],\n            /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-x': [\n                {\n                    'scale-x': scaleScale()\n                }\n            ],\n            /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-y': [\n                {\n                    'scale-y': scaleScale()\n                }\n            ],\n            /**\n       * Scale Z\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-z': [\n                {\n                    'scale-z': scaleScale()\n                }\n            ],\n            /**\n       * Scale 3D\n       * @see https://tailwindcss.com/docs/scale\n       */ 'scale-3d': [\n                'scale-3d'\n            ],\n            /**\n       * Skew\n       * @see https://tailwindcss.com/docs/skew\n       */ skew: [\n                {\n                    skew: scaleSkew()\n                }\n            ],\n            /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */ 'skew-x': [\n                {\n                    'skew-x': scaleSkew()\n                }\n            ],\n            /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */ 'skew-y': [\n                {\n                    'skew-y': scaleSkew()\n                }\n            ],\n            /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */ transform: [\n                {\n                    transform: [\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                        '',\n                        'none',\n                        'gpu',\n                        'cpu'\n                    ]\n                }\n            ],\n            /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */ 'transform-origin': [\n                {\n                    origin: scalePositionWithArbitrary()\n                }\n            ],\n            /**\n       * Transform Style\n       * @see https://tailwindcss.com/docs/transform-style\n       */ 'transform-style': [\n                {\n                    transform: [\n                        '3d',\n                        'flat'\n                    ]\n                }\n            ],\n            /**\n       * Translate\n       * @see https://tailwindcss.com/docs/translate\n       */ translate: [\n                {\n                    translate: scaleTranslate()\n                }\n            ],\n            /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-x': [\n                {\n                    'translate-x': scaleTranslate()\n                }\n            ],\n            /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-y': [\n                {\n                    'translate-y': scaleTranslate()\n                }\n            ],\n            /**\n       * Translate Z\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-z': [\n                {\n                    'translate-z': scaleTranslate()\n                }\n            ],\n            /**\n       * Translate None\n       * @see https://tailwindcss.com/docs/translate\n       */ 'translate-none': [\n                'translate-none'\n            ],\n            // ---------------------\n            // --- Interactivity ---\n            // ---------------------\n            /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */ accent: [\n                {\n                    accent: scaleColor()\n                }\n            ],\n            /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */ appearance: [\n                {\n                    appearance: [\n                        'none',\n                        'auto'\n                    ]\n                }\n            ],\n            /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */ 'caret-color': [\n                {\n                    caret: scaleColor()\n                }\n            ],\n            /**\n       * Color Scheme\n       * @see https://tailwindcss.com/docs/color-scheme\n       */ 'color-scheme': [\n                {\n                    scheme: [\n                        'normal',\n                        'dark',\n                        'light',\n                        'light-dark',\n                        'only-dark',\n                        'only-light'\n                    ]\n                }\n            ],\n            /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */ cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\n       * Field Sizing\n       * @see https://tailwindcss.com/docs/field-sizing\n       */ 'field-sizing': [\n                {\n                    'field-sizing': [\n                        'fixed',\n                        'content'\n                    ]\n                }\n            ],\n            /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */ 'pointer-events': [\n                {\n                    'pointer-events': [\n                        'auto',\n                        'none'\n                    ]\n                }\n            ],\n            /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */ resize: [\n                {\n                    resize: [\n                        'none',\n                        '',\n                        'y',\n                        'x'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */ 'scroll-behavior': [\n                {\n                    scroll: [\n                        'auto',\n                        'smooth'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-m': [\n                {\n                    'scroll-m': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mx': [\n                {\n                    'scroll-mx': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-my': [\n                {\n                    'scroll-my': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-ms': [\n                {\n                    'scroll-ms': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-me': [\n                {\n                    'scroll-me': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mt': [\n                {\n                    'scroll-mt': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mr': [\n                {\n                    'scroll-mr': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-mb': [\n                {\n                    'scroll-mb': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */ 'scroll-ml': [\n                {\n                    'scroll-ml': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-p': [\n                {\n                    'scroll-p': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-px': [\n                {\n                    'scroll-px': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-py': [\n                {\n                    'scroll-py': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-ps': [\n                {\n                    'scroll-ps': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pe': [\n                {\n                    'scroll-pe': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pt': [\n                {\n                    'scroll-pt': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pr': [\n                {\n                    'scroll-pr': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pb': [\n                {\n                    'scroll-pb': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */ 'scroll-pl': [\n                {\n                    'scroll-pl': scaleUnambiguousSpacing()\n                }\n            ],\n            /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */ 'snap-align': [\n                {\n                    snap: [\n                        'start',\n                        'end',\n                        'center',\n                        'align-none'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */ 'snap-stop': [\n                {\n                    snap: [\n                        'normal',\n                        'always'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */ 'snap-type': [\n                {\n                    snap: [\n                        'none',\n                        'x',\n                        'y',\n                        'both'\n                    ]\n                }\n            ],\n            /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */ 'snap-strictness': [\n                {\n                    snap: [\n                        'mandatory',\n                        'proximity'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */ touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'manipulation'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */ 'touch-x': [\n                {\n                    'touch-pan': [\n                        'x',\n                        'left',\n                        'right'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */ 'touch-y': [\n                {\n                    'touch-pan': [\n                        'y',\n                        'up',\n                        'down'\n                    ]\n                }\n            ],\n            /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */ 'touch-pz': [\n                'touch-pinch-zoom'\n            ],\n            /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */ select: [\n                {\n                    select: [\n                        'none',\n                        'text',\n                        'all',\n                        'auto'\n                    ]\n                }\n            ],\n            /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */ 'will-change': [\n                {\n                    'will-change': [\n                        'auto',\n                        'scroll',\n                        'contents',\n                        'transform',\n                        isArbitraryVariable,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // -----------\n            // --- SVG ---\n            // -----------\n            /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */ fill: [\n                {\n                    fill: [\n                        'none',\n                        ...scaleColor()\n                    ]\n                }\n            ],\n            /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */ 'stroke-w': [\n                {\n                    stroke: [\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */ stroke: [\n                {\n                    stroke: [\n                        'none',\n                        ...scaleColor()\n                    ]\n                }\n            ],\n            // ---------------------\n            // --- Accessibility ---\n            // ---------------------\n            /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */ 'forced-color-adjust': [\n                {\n                    'forced-color-adjust': [\n                        'auto',\n                        'none'\n                    ]\n                }\n            ]\n        },\n        conflictingClassGroups: {\n            overflow: [\n                'overflow-x',\n                'overflow-y'\n            ],\n            overscroll: [\n                'overscroll-x',\n                'overscroll-y'\n            ],\n            inset: [\n                'inset-x',\n                'inset-y',\n                'start',\n                'end',\n                'top',\n                'right',\n                'bottom',\n                'left'\n            ],\n            'inset-x': [\n                'right',\n                'left'\n            ],\n            'inset-y': [\n                'top',\n                'bottom'\n            ],\n            flex: [\n                'basis',\n                'grow',\n                'shrink'\n            ],\n            gap: [\n                'gap-x',\n                'gap-y'\n            ],\n            p: [\n                'px',\n                'py',\n                'ps',\n                'pe',\n                'pt',\n                'pr',\n                'pb',\n                'pl'\n            ],\n            px: [\n                'pr',\n                'pl'\n            ],\n            py: [\n                'pt',\n                'pb'\n            ],\n            m: [\n                'mx',\n                'my',\n                'ms',\n                'me',\n                'mt',\n                'mr',\n                'mb',\n                'ml'\n            ],\n            mx: [\n                'mr',\n                'ml'\n            ],\n            my: [\n                'mt',\n                'mb'\n            ],\n            size: [\n                'w',\n                'h'\n            ],\n            'font-size': [\n                'leading'\n            ],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction'\n            ],\n            'fvn-ordinal': [\n                'fvn-normal'\n            ],\n            'fvn-slashed-zero': [\n                'fvn-normal'\n            ],\n            'fvn-figure': [\n                'fvn-normal'\n            ],\n            'fvn-spacing': [\n                'fvn-normal'\n            ],\n            'fvn-fraction': [\n                'fvn-normal'\n            ],\n            'line-clamp': [\n                'display',\n                'overflow'\n            ],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl'\n            ],\n            'rounded-s': [\n                'rounded-ss',\n                'rounded-es'\n            ],\n            'rounded-e': [\n                'rounded-se',\n                'rounded-ee'\n            ],\n            'rounded-t': [\n                'rounded-tl',\n                'rounded-tr'\n            ],\n            'rounded-r': [\n                'rounded-tr',\n                'rounded-br'\n            ],\n            'rounded-b': [\n                'rounded-br',\n                'rounded-bl'\n            ],\n            'rounded-l': [\n                'rounded-tl',\n                'rounded-bl'\n            ],\n            'border-spacing': [\n                'border-spacing-x',\n                'border-spacing-y'\n            ],\n            'border-w': [\n                'border-w-x',\n                'border-w-y',\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l'\n            ],\n            'border-w-x': [\n                'border-w-r',\n                'border-w-l'\n            ],\n            'border-w-y': [\n                'border-w-t',\n                'border-w-b'\n            ],\n            'border-color': [\n                'border-color-x',\n                'border-color-y',\n                'border-color-s',\n                'border-color-e',\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l'\n            ],\n            'border-color-x': [\n                'border-color-r',\n                'border-color-l'\n            ],\n            'border-color-y': [\n                'border-color-t',\n                'border-color-b'\n            ],\n            translate: [\n                'translate-x',\n                'translate-y',\n                'translate-none'\n            ],\n            'translate-none': [\n                'translate',\n                'translate-x',\n                'translate-y',\n                'translate-z'\n            ],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml'\n            ],\n            'scroll-mx': [\n                'scroll-mr',\n                'scroll-ml'\n            ],\n            'scroll-my': [\n                'scroll-mt',\n                'scroll-mb'\n            ],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl'\n            ],\n            'scroll-px': [\n                'scroll-pr',\n                'scroll-pl'\n            ],\n            'scroll-py': [\n                'scroll-pt',\n                'scroll-pb'\n            ],\n            touch: [\n                'touch-x',\n                'touch-y',\n                'touch-pz'\n            ],\n            'touch-x': [\n                'touch'\n            ],\n            'touch-y': [\n                'touch'\n            ],\n            'touch-pz': [\n                'touch'\n            ]\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': [\n                'leading'\n            ]\n        },\n        orderSensitiveModifiers: [\n            '*',\n            '**',\n            'after',\n            'backdrop',\n            'before',\n            'details-content',\n            'file',\n            'first-letter',\n            'first-line',\n            'marker',\n            'placeholder',\n            'selection'\n        ]\n    };\n};\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */ const mergeConfigs = (baseConfig, { cacheSize, prefix, experimentalParseClassName, extend = {}, override = {} })=>{\n    overrideProperty(baseConfig, 'cacheSize', cacheSize);\n    overrideProperty(baseConfig, 'prefix', prefix);\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n    overrideConfigProperties(baseConfig.theme, override.theme);\n    overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n    overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n    mergeConfigProperties(baseConfig.theme, extend.theme);\n    mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n    mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n    return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue)=>{\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue;\n    }\n};\nconst overrideConfigProperties = (baseObject, overrideObject)=>{\n    if (overrideObject) {\n        for(const key in overrideObject){\n            overrideProperty(baseObject, key, overrideObject[key]);\n        }\n    }\n};\nconst mergeConfigProperties = (baseObject, mergeObject)=>{\n    if (mergeObject) {\n        for(const key in mergeObject){\n            mergeArrayProperties(baseObject, mergeObject, key);\n        }\n    }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key)=>{\n    const mergeValue = mergeObject[key];\n    if (mergeValue !== undefined) {\n        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n    }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig)=>typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(()=>mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/ createTailwindMerge(getDefaultConfig);\n //# sourceMappingURL=bundle-mjs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/tailwind-merge/dist/bundle-mjs.mjs\n");

/***/ })

};
;