/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/woocommerce/route";
exports.ids = ["app/api/woocommerce/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fwoocommerce%2Froute&page=%2Fapi%2Fwoocommerce%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwoocommerce%2Froute.ts&appDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fwoocommerce%2Froute&page=%2Fapi%2Fwoocommerce%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwoocommerce%2Froute.ts&appDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/../../node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/../../node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/../../node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/../../node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/../../node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/../../node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/../../node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/../../node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/../../node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/../../node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/../../node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_kingbrand_Desktop_headless_woo_apps_web_src_app_api_woocommerce_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/woocommerce/route.ts */ \"(rsc)/./src/app/api/woocommerce/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/woocommerce/route\",\n        pathname: \"/api/woocommerce\",\n        filename: \"route\",\n        bundlePath: \"app/api/woocommerce/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/kingbrand/Desktop/headless-woo/apps/web/src/app/api/woocommerce/route.ts\",\n    nextConfigOutput,\n    userland: _Users_kingbrand_Desktop_headless_woo_apps_web_src_app_api_woocommerce_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/woocommerce/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fwoocommerce%2Froute&page=%2Fapi%2Fwoocommerce%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwoocommerce%2Froute.ts&appDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/woocommerce/route.ts":
/*!******************************************!*\
  !*** ./src/app/api/woocommerce/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/cache */ \"(rsc)/./src/lib/cache.ts\");\n\n\n// Redis is optional - will be undefined if not available\nconst redis = undefined;\nconst WC_URL = process.env.WOOCOMMERCE_API_URL;\nconst SITE_BASE = WC_URL ? WC_URL.replace(/\\/wp-json\\/wc\\/v3.*/, '') : '';\nconst CK = process.env.WOOCOMMERCE_CONSUMER_KEY;\nconst CS = process.env.WOOCOMMERCE_CONSUMER_SECRET;\n// Handle password reset using WordPress REST API\nasync function handlePasswordReset(body) {\n    const { email } = body;\n    if (!email) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Email jest wymagany'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Password reset request for:', email);\n        // Użyj custom mu-plugin endpoint\n        const customUrl = 'https://qvwltjhdjw.cfolks.pl/wp-json/custom/v1/password-reset';\n        const response = await fetch(customUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            },\n            body: JSON.stringify({\n                email\n            })\n        });\n        console.log('🔄 Custom endpoint response status:', response.status);\n        console.log('🔄 Custom endpoint response headers:', Object.fromEntries(response.headers.entries()));\n        if (response.ok) {\n            const data = await response.json();\n            console.log('✅ Custom password reset API response:', data);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: data.success,\n                message: data.message,\n                debug_info: data.debug_info\n            });\n        } else {\n            console.log('❌ Custom password reset API failed:', response.status);\n            const errorText = await response.text();\n            console.log('❌ Custom endpoint error response:', errorText);\n            // Fallback: Sprawdź czy użytkownik istnieje przez WooCommerce API\n            const wcUrl = 'https://qvwltjhdjw.cfolks.pl/wp-json/wc/v3/customers';\n            const auth = 'Basic ' + Buffer.from('ck_deb61eadd7300ebfc5f8074ce7c53c6668eb725d:cs_0de18ed0e013f96aebfb51c77f506bb94e416cb8').toString('base64');\n            const wcResponse = await fetch(`${wcUrl}?email=${encodeURIComponent(email)}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': auth,\n                    'Content-Type': 'application/json',\n                    'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n                }\n            });\n            if (wcResponse.ok) {\n                const customerData = await wcResponse.json();\n                console.log('✅ Customer found via WooCommerce API:', customerData.length > 0);\n                if (customerData.length > 0) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        message: 'Użytkownik został znaleziony. Ze względów bezpieczeństwa, skontaktuj się z obsługą klienta w celu resetowania hasła.'\n                    });\n                }\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: 'Jeśli podany email istnieje w systemie, otrzymasz link do resetowania hasła.'\n            });\n        }\n    } catch (error) {\n        console.error('🚨 Password reset error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Jeśli podany email istnieje w systemie, otrzymasz link do resetowania hasła.'\n        });\n    }\n}\nasync function handlePasswordResetConfirm(body) {\n    const { key, login, password } = body;\n    if (!key || !login || !password) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Wszystkie pola są wymagane'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Password reset confirm for user:', login);\n        // Użyj custom mu-plugin endpoint\n        const customUrl = 'https://qvwltjhdjw.cfolks.pl/wp-json/custom/v1/reset-password';\n        console.log('🔄 Attempting password reset with:', {\n            key: key.substring(0, 10) + '...',\n            login,\n            passwordLength: password.length\n        });\n        const response = await fetch(customUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            },\n            body: JSON.stringify({\n                key: key,\n                login: login,\n                password: password\n            })\n        });\n        console.log('🔄 Password reset response status:', response.status);\n        if (response.ok) {\n            const data = await response.json();\n            console.log('✅ Password reset successful for user:', login);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: 'Hasło zostało pomyślnie zresetowane'\n            });\n        } else {\n            console.log('❌ WordPress password reset failed:', response.status);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Nieprawidłowy lub wygasły klucz resetujący'\n            }, {\n                status: 400\n            });\n        }\n    } catch (error) {\n        console.error('🚨 Password reset confirm error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Wystąpił błąd podczas resetowania hasła'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleCustomerInvoices(req) {\n    const { searchParams } = new URL(req.url);\n    const customerId = searchParams.get('customer_id');\n    if (!customerId) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Customer ID jest wymagany'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Fetching invoices for customer:', customerId);\n        // Call WordPress custom API\n        const invoicesUrl = `https://qvwltjhdjw.cfolks.pl/wp-json/custom/v1/invoices?customer_id=${customerId}`;\n        const response = await fetch(invoicesUrl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            }\n        });\n        const raw = await response.text();\n        let data = null;\n        try {\n            data = raw ? JSON.parse(raw) : null;\n        } catch (e) {}\n        if (!response.ok) {\n            const msg = data && (data.error || data.message) || raw || 'Błąd pobierania faktur';\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: String(msg).slice(0, 1000)\n            }, {\n                status: response.status || 502\n            });\n        }\n        if (!data) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                invoices: []\n            });\n        }\n        console.log('✅ Successfully fetched invoices for customer:', customerId);\n        const rawInvoices = Array.isArray(data.invoices) ? data.invoices : [];\n        const enriched = rawInvoices.map((inv)=>{\n            const id = inv.id || inv.order_id;\n            const hasDownload = inv.download_url && typeof inv.download_url === 'string' && inv.download_url.length > 0;\n            const pluginUrl = id ? `${SITE_BASE}/?action=generate_wpo_wcpdf&document_type=invoice&order_ids=${id}` : undefined;\n            return {\n                ...inv,\n                download_url: hasDownload ? inv.download_url : pluginUrl\n            };\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            invoices: enriched\n        });\n    } catch (error) {\n        console.error('🚨 Error fetching customer invoices:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Nie udało się pobrać faktur'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleOrderTracking(req) {\n    const { searchParams } = new URL(req.url);\n    const orderId = searchParams.get('order_id');\n    if (!orderId) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Order ID jest wymagany'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Fetching tracking for order:', orderId);\n        // Call WordPress custom API\n        const trackingUrl = `https://qvwltjhdjw.cfolks.pl/wp-json/custom/v1/tracking/${orderId}`;\n        const response = await fetch(trackingUrl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            }\n        });\n        const raw = await response.text();\n        let data = null;\n        try {\n            data = raw ? JSON.parse(raw) : null;\n        } catch (e) {}\n        if (!response.ok) {\n            const msg = data && (data.error || data.message) || raw || 'Błąd pobierania śledzenia';\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: String(msg).slice(0, 1000)\n            }, {\n                status: response.status || 502\n            });\n        }\n        if (!data) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                tracking: {}\n            });\n        }\n        console.log('✅ Successfully fetched tracking for order:', orderId);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            tracking: data.tracking || {}\n        });\n    } catch (error) {\n        console.error('🚨 Error fetching order tracking:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Nie udało się pobrać informacji o śledzeniu'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleCustomerProfileUpdate(body) {\n    const { customer_id, profile_data } = body;\n    if (!customer_id || !profile_data) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Customer ID i dane profilu są wymagane'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Updating customer profile:', customer_id);\n        // 1) Update via custom WP endpoint (best-effort)\n        let customerFromCustom = null;\n        try {\n            const updateUrl = 'https://qvwltjhdjw.cfolks.pl/wp-json/custom/v1/customer/update-profile';\n            const response = await fetch(updateUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n                },\n                body: JSON.stringify({\n                    customer_id: customer_id,\n                    profile_data: profile_data\n                })\n            });\n            const raw = await response.text();\n            let data = null;\n            try {\n                data = raw ? JSON.parse(raw) : null;\n            } catch (e) {}\n            if (response.ok && data && data.success) {\n                customerFromCustom = data.customer || null;\n            } else {\n                console.log('ℹ️ Custom update-profile did not return success, continuing with Woo update');\n            }\n        } catch (e) {\n            console.log('ℹ️ Custom update-profile call failed, continuing with Woo update');\n        }\n        // 2) Ensure persistence in WooCommerce via REST API (PATCH customers/{id})\n        if (!WC_URL || !CK || !CS) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Brak konfiguracji WooCommerce API'\n            }, {\n                status: 500\n            });\n        }\n        const wooPayload = {\n            first_name: profile_data.firstName,\n            last_name: profile_data.lastName,\n            billing: {\n                first_name: profile_data.firstName,\n                last_name: profile_data.lastName,\n                company: profile_data.billing?.company || '',\n                phone: profile_data.billing?.phone || '',\n                address_1: profile_data.billing?.address || '',\n                city: profile_data.billing?.city || '',\n                postcode: profile_data.billing?.postcode || '',\n                country: profile_data.billing?.country || 'PL',\n                email: undefined\n            },\n            shipping: {\n                first_name: profile_data.firstName,\n                last_name: profile_data.lastName,\n                company: profile_data.shipping?.company || '',\n                address_1: profile_data.shipping?.address || '',\n                city: profile_data.shipping?.city || '',\n                postcode: profile_data.shipping?.postcode || '',\n                country: profile_data.shipping?.country || 'PL'\n            },\n            meta_data: []\n        };\n        const nip = profile_data.billing?.nip || profile_data.nip;\n        const invoiceReq = profile_data.billing?.invoiceRequest ?? profile_data.invoiceRequest;\n        if (nip !== undefined) {\n            wooPayload.meta_data.push({\n                key: '_billing_nip',\n                value: String(nip)\n            });\n        }\n        if (invoiceReq !== undefined) {\n            wooPayload.meta_data.push({\n                key: '_invoice_request',\n                value: invoiceReq ? 'yes' : 'no'\n            });\n        }\n        const wooUrl = `${WC_URL}/customers/${customer_id}?consumer_key=${CK}&consumer_secret=${CS}`;\n        const wooResp = await fetch(wooUrl, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            },\n            body: JSON.stringify(wooPayload)\n        });\n        const wooRaw = await wooResp.text();\n        let wooData = null;\n        try {\n            wooData = wooRaw ? JSON.parse(wooRaw) : null;\n        } catch (_) {}\n        if (!wooResp.ok) {\n            const msg = wooData && (wooData.error || wooData.message) || wooRaw || 'Błąd aktualizacji klienta w WooCommerce';\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: String(msg).slice(0, 1000)\n            }, {\n                status: wooResp.status || 502\n            });\n        }\n        console.log('✅ WooCommerce customer updated:', customer_id);\n        // Merge best available customer data\n        const mergedCustomer = customerFromCustom || wooData;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Profil został zaktualizowany',\n            customer: mergedCustomer\n        });\n    } catch (error) {\n        console.error('🚨 Error updating customer profile:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || 'Nie udało się zaktualizować profilu'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleCustomerPasswordChange(body) {\n    const { customer_id, current_password, new_password } = body;\n    if (!customer_id || !current_password || !new_password) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Wszystkie pola są wymagane'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Changing customer password:', customer_id);\n        // Call WordPress custom API\n        const changePasswordUrl = 'https://qvwltjhdjw.cfolks.pl/wp-json/custom/v1/customer/change-password';\n        const response = await fetch(changePasswordUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            },\n            body: JSON.stringify({\n                customer_id: customer_id,\n                current_password: current_password,\n                new_password: new_password\n            })\n        });\n        const raw = await response.text();\n        let data = null;\n        try {\n            data = raw ? JSON.parse(raw) : null;\n        } catch (e) {}\n        if (!response.ok) {\n            const msg = response.status === 404 ? 'Funkcja zmiany hasła nie jest jeszcze dostępna. Skontaktuj się z administratorem.' : data && (data.error || data.message) || raw || 'Błąd zmiany hasła';\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: String(msg).slice(0, 1000)\n            }, {\n                status: response.status || 502\n            });\n        }\n        if (!data) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: 'Hasło zostało zmienione'\n            });\n        }\n        console.log('✅ Successfully changed customer password:', customer_id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: data.message\n        });\n    } catch (error) {\n        console.error('🚨 Error changing customer password:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || 'Nie udało się zmienić hasła'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleOrderCreation(body) {\n    const { billing, shipping, line_items, payment_method, payment_method_title, shipping_lines, customer_id, coupon_lines, meta_data } = body;\n    if (!billing || !line_items || !payment_method) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Brakuje wymaganych danych zamówienia'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        console.log('🔄 Creating order in WooCommerce');\n        console.log('🎫 Coupon lines received:', coupon_lines);\n        // Prepare order data for WooCommerce\n        const orderData = {\n            payment_method: payment_method,\n            payment_method_title: payment_method_title || payment_method,\n            set_paid: false,\n            customer_id: customer_id,\n            billing: {\n                first_name: billing.firstName,\n                last_name: billing.lastName,\n                email: billing.email,\n                phone: billing.phone,\n                company: billing.company || '',\n                address_1: billing.address,\n                city: billing.city,\n                state: '',\n                postcode: billing.postcode,\n                country: billing.country || 'PL'\n            },\n            shipping: shipping ? {\n                first_name: shipping.firstName,\n                last_name: shipping.lastName,\n                company: shipping.company || '',\n                address_1: shipping.address,\n                city: shipping.city,\n                state: '',\n                postcode: shipping.postcode,\n                country: shipping.country || 'PL'\n            } : {\n                first_name: billing.firstName,\n                last_name: billing.lastName,\n                company: billing.company || '',\n                address_1: billing.address,\n                city: billing.city,\n                state: '',\n                postcode: billing.postcode,\n                country: billing.country || 'PL'\n            },\n            line_items: line_items.map((item)=>({\n                    product_id: item.product_id,\n                    variation_id: item.variation_id || 0,\n                    quantity: item.quantity,\n                    meta_data: item.meta_data || []\n                })),\n            shipping_lines: shipping_lines || [],\n            coupon_lines: coupon_lines || [],\n            meta_data: [\n                ...meta_data || [],\n                {\n                    key: '_created_via',\n                    value: 'headless-woo'\n                },\n                {\n                    key: '_order_version',\n                    value: '1.0.0'\n                }\n            ]\n        };\n        // Create order via WooCommerce REST API\n        const orderUrl = `${WC_URL}/orders?consumer_key=${CK}&consumer_secret=${CS}`;\n        const response = await fetch(orderUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Mozilla/5.0 (compatible; HeadlessWoo/1.0)'\n            },\n            body: JSON.stringify(orderData)\n        });\n        const raw = await response.text();\n        let data = null;\n        try {\n            data = raw ? JSON.parse(raw) : null;\n        } catch (e) {}\n        if (!response.ok) {\n            const msg = data && (data.message || data.error) || raw || 'Błąd tworzenia zamówienia';\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: String(msg).slice(0, 1000)\n            }, {\n                status: response.status || 502\n            });\n        }\n        if (!data) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Nie udało się utworzyć zamówienia'\n            }, {\n                status: 500\n            });\n        }\n        console.log('✅ Successfully created order:', data.id);\n        // Trigger WooCommerce emails after order creation\n        try {\n            console.log('📧 Triggering WooCommerce emails for order:', data.id);\n            // Use our custom email API endpoint\n            const emailApiUrl = `${WC_URL}/wp-json/king-email/v1/trigger-order-email`;\n            const emailResponse = await fetch(emailApiUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    order_id: data.id\n                })\n            });\n            if (emailResponse.ok) {\n                const emailResult = await emailResponse.json();\n                console.log('✅ Email triggered via API:', emailResult);\n            } else {\n                console.log('⚠️ Failed to trigger email via API');\n            }\n        } catch (emailError) {\n            console.error('❌ Error triggering emails:', emailError);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            order: {\n                id: data.id,\n                number: data.number,\n                status: data.status,\n                total: data.total,\n                currency: data.currency,\n                payment_url: data.payment_url,\n                checkout_payment_url: data.checkout_payment_url,\n                date_created: data.date_created,\n                billing: data.billing,\n                shipping: data.shipping,\n                line_items: data.line_items\n            }\n        });\n    } catch (error) {\n        console.error('🚨 Error creating order:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || 'Nie udało się utworzyć zamówienia'\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle attributes endpoint - PRO Architecture: Dynamic attributes based on filters\nasync function handleAttributesEndpoint(req) {\n    const { searchParams } = new URL(req.url);\n    if (!WC_URL || !CK || !CS) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Błąd konfiguracji serwera',\n            details: 'Brakuje zmiennych środowiskowych WooCommerce'\n        }, {\n            status: 500\n        });\n    }\n    try {\n        // PRO Architecture: WordPress robi całe filtrowanie atrybutów\n        const attributesUrl = `https://qvwltjhdjw.cfolks.pl/wp-json/king-shop/v1/attributes?${searchParams.toString()}`;\n        console.log('🏷️ Attributes endpoint - calling King Shop API:', attributesUrl);\n        const response = await fetch(attributesUrl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Filler-Store/1.0'\n            },\n            cache: 'no-store'\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('✅ Attributes data received from WordPress:', {\n            attributes: data.attributes ? Object.keys(data.attributes).length : 0,\n            total_products: data.total_products || 0\n        });\n        // WordPress zrobił całe filtrowanie - zwracamy dane jak są\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(data, {\n            status: 200,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Cache-Control\": \"public, max-age=60, s-maxage=120, stale-while-revalidate=300\",\n                \"X-Cache\": \"MISS\"\n            }\n        });\n    } catch (error) {\n        console.error('❌ Attributes endpoint error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Nie udało się pobrać atrybutów',\n            details: error instanceof Error ? error.message : 'Nieznany błąd'\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle shop endpoint - PRO Architecture: WordPress robi całe filtrowanie\nasync function handleShopEndpoint(req) {\n    const { searchParams } = new URL(req.url);\n    if (!WC_URL || !CK || !CS) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Błąd konfiguracji serwera',\n            details: 'Brakuje zmiennych środowiskowych WooCommerce'\n        }, {\n            status: 500\n        });\n    }\n    try {\n        // PRO Architecture: WordPress robi całe filtrowanie\n        // Next.js tylko przekazuje parametry i cache'uje odpowiedź\n        const shopUrl = `https://qvwltjhdjw.cfolks.pl/wp-json/king-shop/v1/data?${searchParams.toString()}`;\n        console.log('🛍️ Shop endpoint - calling King Shop API:', shopUrl);\n        const response = await fetch(shopUrl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'User-Agent': 'Filler-Store/1.0'\n            },\n            cache: 'no-store'\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('✅ Shop data received from WordPress:', {\n            products: data.products?.length || 0,\n            total: data.total,\n            categories: data.categories?.length || 0,\n            attributes: data.attributes ? Object.keys(data.attributes).length : 0\n        });\n        // WordPress zrobił całe filtrowanie - zwracamy dane jak są\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(data, {\n            status: 200,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"Cache-Control\": \"public, max-age=60, s-maxage=120, stale-while-revalidate=300\",\n                \"X-Cache\": \"MISS\"\n            }\n        });\n    } catch (error) {\n        console.error('❌ Shop endpoint error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Nie udało się pobrać danych sklepu',\n            details: error instanceof Error ? error.message : 'Nieznany błąd'\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle shipping methods endpoint\nasync function handleShippingMethods(req) {\n    const { searchParams } = new URL(req.url);\n    const country = searchParams.get(\"country\") || \"PL\";\n    const state = searchParams.get(\"state\") || \"\";\n    const city = searchParams.get(\"city\") || \"\";\n    const postcode = searchParams.get(\"postcode\") || \"\";\n    if (!WC_URL || !CK || !CS) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Błąd konfiguracji serwera',\n            details: 'Brakuje zmiennych środowiskowych WooCommerce'\n        }, {\n            status: 500\n        });\n    }\n    try {\n        // Get shipping zones and methods from WooCommerce\n        const shippingZonesUrl = `${WC_URL}/shipping/zones?consumer_key=${CK}&consumer_secret=${CS}`;\n        const zonesResponse = await fetch(shippingZonesUrl, {\n            headers: {\n                Accept: 'application/json',\n                'User-Agent': 'Filler-Store/1.0'\n            }\n        });\n        if (!zonesResponse.ok) {\n            throw new Error(`Nie udało się pobrać stref wysyłki: ${zonesResponse.status}`);\n        }\n        // Harden against HTML/non-JSON responses\n        const zonesText = await zonesResponse.text();\n        let zonesParsed;\n        try {\n            zonesParsed = JSON.parse(zonesText);\n        } catch (_) {\n            console.error('Shipping zones returned non-JSON (truncated):', zonesText.substring(0, 200));\n            zonesParsed = [];\n        }\n        const zones = Array.isArray(zonesParsed) ? zonesParsed : [];\n        // Get methods for each zone\n        const shippingMethods = [];\n        for (const zone of zones){\n            const methodsUrl = `${WC_URL}/shipping/zones/${zone.id}/methods?consumer_key=${CK}&consumer_secret=${CS}`;\n            const methodsResponse = await fetch(methodsUrl);\n            if (methodsResponse.ok) {\n                const responseText = await methodsResponse.text();\n                let methods = [];\n                // Prefer native JSON parsing first\n                try {\n                    methods = await JSON.parse(responseText);\n                } catch (_) {\n                    // If parsing fails due to raw HTML inside fields (e.g. method_description),\n                    // sanitize the payload by stripping HTML-bearing properties before parsing again.\n                    try {\n                        const sanitized = responseText// Remove/empty method_description HTML blobs that can break JSON\n                        .replace(/\"method_description\"\\s*:\\s*\"[\\s\\S]*?\"(?=,|\\}|\\])/g, '\"method_description\":\"\"')// Ensure method_title is a flat string (strip tags if any)\n                        .replace(/\"method_title\"\\s*:\\s*\"([\\s\\S]*?)\"/g, (_m, g1)=>{\n                            const clean = String(g1).replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n                            return `\"method_title\":\"${clean}\"`;\n                        });\n                        methods = JSON.parse(sanitized);\n                    } catch (error) {\n                        console.error('Nie udało się bezpiecznie sparsować metod wysyłki:', error);\n                        console.log('Response text (truncated):', responseText.substring(0, 200));\n                        methods = [];\n                    }\n                }\n                for (const method of methods){\n                    if (method.enabled) {\n                        shippingMethods.push({\n                            id: method.id,\n                            method_id: method.method_id,\n                            title: method.title,\n                            cost: method.cost || '0',\n                            zone_id: zone.id,\n                            zone_name: zone.name,\n                            // Additional properties for internal use\n                            method_title: method.method_title || method.title,\n                            method_description: method.method_description || '',\n                            settings: method.settings || {},\n                            zone_locations: zone.locations || []\n                        });\n                    }\n                }\n            }\n        }\n        // Process and normalize shipping methods (same logic as in service)\n        const processedMethods = shippingMethods.map((method)=>{\n            let cost = 0;\n            let freeShippingThreshold = 0;\n            // Handle Flexible Shipping methods\n            if (method.method_id === 'flexible_shipping_single') {\n                const settings = method.settings || {};\n                // Get free shipping threshold\n                if (settings.method_free_shipping && settings.method_free_shipping.value) {\n                    freeShippingThreshold = parseFloat(settings.method_free_shipping.value); // Keep as PLN, not cents\n                }\n                // Get cost from rules\n                if (settings.method_rules && settings.method_rules.value && settings.method_rules.value.length > 0) {\n                    const rules = settings.method_rules.value;\n                    // Find the rule that applies (usually the first one)\n                    if (rules[0] && rules[0].cost_per_order) {\n                        cost = parseFloat(rules[0].cost_per_order); // Keep as PLN, not cents\n                    }\n                }\n            } else if (method.method_id === 'flat_rate') {\n                const settings = method.settings || {};\n                if (settings.cost && settings.cost.value) {\n                    cost = parseFloat(settings.cost.value); // Keep as PLN, not cents\n                }\n            }\n            // Clean HTML from description\n            const cleanDescription = (desc)=>{\n                if (!desc) return '';\n                // Remove HTML tags and decode entities\n                return desc.replace(/<[^>]*>/g, '') // Remove HTML tags\n                .replace(/&rarr;/g, '→') // Decode arrow\n                .replace(/&nbsp;/g, ' ') // Decode non-breaking space\n                .replace(/&amp;/g, '&') // Decode ampersand\n                .replace(/&lt;/g, '<') // Decode less than\n                .replace(/&gt;/g, '>') // Decode greater than\n                .replace(/&quot;/g, '\"') // Decode quote\n                .trim();\n            };\n            return {\n                id: method.id,\n                method_id: method.method_id,\n                method_title: method.settings?.method_title?.value || method.method_title,\n                method_description: cleanDescription(method.settings?.method_description?.value || method.method_description),\n                cost: cost,\n                free_shipping_threshold: freeShippingThreshold,\n                zone_id: method.zone_id,\n                zone_name: method.zone_name,\n                settings: method.settings\n            };\n        });\n        // Fallback: if no methods found, provide sensible defaults so checkout remains usable\n        const methodsOut = Array.isArray(processedMethods) && processedMethods.length > 0 ? processedMethods : [\n            {\n                id: 'free_shipping_default',\n                method_id: 'free_shipping',\n                method_title: 'Darmowa dostawa',\n                method_description: '',\n                cost: 0,\n                free_shipping_threshold: 0,\n                zone_id: 0,\n                zone_name: 'Domyślna',\n                settings: {}\n            },\n            {\n                id: 'flat_rate_default',\n                method_id: 'flat_rate',\n                method_title: 'Dostawa standardowa',\n                method_description: '',\n                cost: 15,\n                free_shipping_threshold: 0,\n                zone_id: 0,\n                zone_name: 'Domyślna',\n                settings: {}\n            },\n            {\n                id: 'local_pickup_default',\n                method_id: 'local_pickup',\n                method_title: 'Odbiór osobisty',\n                method_description: '',\n                cost: 0,\n                free_shipping_threshold: 0,\n                zone_id: 0,\n                zone_name: 'Domyślna',\n                settings: {}\n            }\n        ];\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            shipping_methods: methodsOut,\n            country,\n            state,\n            city,\n            postcode\n        });\n    } catch (error) {\n        console.error('Shipping methods API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Nie udało się pobrać metod wysyłki',\n            details: error instanceof Error ? error.message : String(error)\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleCoupons(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const code = searchParams.get('code');\n        if (!WC_URL || !CK || !CS) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Brak konfiguracji WooCommerce'\n            }, {\n                status: 500\n            });\n        }\n        // If specific code requested, validate it\n        if (code) {\n            const response = await fetch(`${WC_URL}/coupons?code=${encodeURIComponent(code)}&status=active`, {\n                headers: {\n                    'Authorization': `Basic ${Buffer.from(`${CK}:${CS}`).toString('base64')}`\n                }\n            });\n            if (!response.ok) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Nieprawidłowy kod rabatowy'\n                }, {\n                    status: 400\n                });\n            }\n            const coupons = await response.json();\n            if (coupons.length === 0) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Nieprawidłowy kod rabatowy'\n                }, {\n                    status: 400\n                });\n            }\n            const coupon = coupons[0];\n            // Check if coupon is still valid\n            if (coupon.usage_limit && coupon.usage_count >= coupon.usage_limit) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Kod rabatowy został już wykorzystany'\n                }, {\n                    status: 400\n                });\n            }\n            if (coupon.date_expires && new Date(coupon.date_expires) < new Date()) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Kod rabatowy wygasł'\n                }, {\n                    status: 400\n                });\n            }\n            // Check per-user usage limit\n            if (coupon.usage_limit_per_user && coupon.usage_limit_per_user > 0) {\n                // For now, we'll rely on WooCommerce to enforce this when creating the order\n                // The used_by array will be checked by WooCommerce API\n                console.log('ℹ️ Coupon has per-user limit:', coupon.usage_limit_per_user);\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                coupon: {\n                    id: coupon.id,\n                    code: coupon.code,\n                    discount_type: coupon.discount_type,\n                    amount: parseFloat(coupon.amount),\n                    minimum_amount: coupon.minimum_amount ? parseFloat(coupon.minimum_amount) : null,\n                    maximum_amount: coupon.maximum_amount ? parseFloat(coupon.maximum_amount) : null,\n                    usage_limit: coupon.usage_limit,\n                    usage_count: coupon.usage_count,\n                    date_expires: coupon.date_expires\n                }\n            });\n        }\n        // Return all active coupons (for admin purposes)\n        const response = await fetch(`${WC_URL}/coupons?status=active&_fields=id,code,discount_type,amount,minimum_amount,maximum_amount,usage_limit,usage_count,date_expires`, {\n            headers: {\n                'Authorization': `Basic ${Buffer.from(`${CK}:${CS}`).toString('base64')}`\n            }\n        });\n        const coupons = await response.json();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            coupons: coupons.map((coupon)=>({\n                    id: coupon.id,\n                    code: coupon.code,\n                    discount_type: coupon.discount_type,\n                    amount: parseFloat(coupon.amount),\n                    minimum_amount: coupon.minimum_amount ? parseFloat(coupon.minimum_amount) : null,\n                    maximum_amount: coupon.maximum_amount ? parseFloat(coupon.maximum_amount) : null,\n                    usage_limit: coupon.usage_limit,\n                    usage_count: coupon.usage_count,\n                    date_expires: coupon.date_expires\n                }))\n        });\n    } catch (error) {\n        console.error('Coupons API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Nie udało się pobrać kuponów',\n            details: error instanceof Error ? error.message : String(error)\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(req) {\n    const { searchParams } = new URL(req.url);\n    const endpoint = searchParams.get(\"endpoint\") || \"products\";\n    const bypassCache = searchParams.get(\"cache\") === \"off\";\n    // Optimized product endpoint\n    if (endpoint.startsWith('king-optimized/product/')) {\n        const slug = endpoint.replace('king-optimized/product/', '');\n        const url = `${\"https://qvwltjhdjw.cfolks.pl\"}/wp-json/king-optimized/v1/product/${slug}`;\n        try {\n            const response = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json'\n                },\n                cache: bypassCache ? 'no-store' : 'default'\n            });\n            if (!response.ok) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Product not found'\n                }, {\n                    status: response.status\n                });\n            }\n            const data = await response.json();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(data);\n        } catch (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: error.message\n            }, {\n                status: 500\n            });\n        }\n    }\n    // Customer profile endpoint\n    if (endpoint.startsWith('customers/')) {\n        const customerId = endpoint.replace('customers/', '');\n        const authHeader = req.headers.get('authorization');\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        try {\n            console.log('🔄 Fetching customer data for ID:', customerId);\n            const response = await fetch(`${WC_URL}/customers/${customerId}?consumer_key=${CK}&consumer_secret=${CS}`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n            console.log('🔍 Customer API response status:', response.status);\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('❌ Customer API error:', errorText);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Customer not found'\n                }, {\n                    status: response.status\n                });\n            }\n            const customerData = await response.json();\n            console.log('✅ Customer data fetched:', customerData);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(customerData);\n        } catch (error) {\n            console.error('❌ Customer fetch error:', error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 500\n            });\n        }\n    }\n    // Payment gateways\n    if (endpoint === 'payment_gateways') {\n        if (!WC_URL || !CK || !CS) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Brak konfiguracji WooCommerce API'\n            }, {\n                status: 500\n            });\n        }\n        try {\n            const url = `${WC_URL}/payment_gateways?consumer_key=${CK}&consumer_secret=${CS}`;\n            const r = await fetch(url, {\n                headers: {\n                    Accept: 'application/json',\n                    'User-Agent': 'Filler-Store/1.0'\n                },\n                cache: 'no-store'\n            });\n            const text = await r.text();\n            let data = null;\n            try {\n                data = text ? JSON.parse(text) : null;\n            } catch (_) {}\n            if (!r.ok) {\n                const msg = data && (data.message || data.error) || text || 'Błąd pobierania metod płatności';\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: String(msg).slice(0, 1000)\n                }, {\n                    status: r.status || 502\n                });\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                gateways: Array.isArray(data) ? data : []\n            });\n        } catch (e) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: e instanceof Error ? e.message : String(e)\n            }, {\n                status: 502\n            });\n        }\n    }\n    // Special handling for shipping methods\n    if (endpoint === \"shipping_methods\") {\n        return handleShippingMethods(req);\n    }\n    // Special handling for coupons\n    if (endpoint === \"coupons\") {\n        return handleCoupons(req);\n    }\n    // Special handling for attributes endpoint - PRO Architecture\n    if (endpoint === \"attributes\") {\n        return handleAttributesEndpoint(req);\n    }\n    // Special handling for shop endpoint - use new King Shop API\n    if (endpoint === \"shop\") {\n        return handleShopEndpoint(req);\n    }\n    if (!WC_URL || !CK || !CS) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Błąd konfiguracji serwera',\n            details: 'Brakuje zmiennych środowiskowych WooCommerce'\n        }, {\n            status: 500\n        });\n    }\n    // Rate limiting\n    const ip = req.headers.get('x-forwarded-for') || req.headers.get('x-real-ip') || 'unknown';\n    const rateLimit = _lib_cache__WEBPACK_IMPORTED_MODULE_1__.cache.checkRateLimit(ip);\n    if (!rateLimit.allowed) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Przekroczono limit zapytań',\n            retryAfter: Math.ceil((rateLimit.resetAt - Date.now()) / 1000)\n        }, {\n            status: 429,\n            headers: {\n                'Retry-After': Math.ceil((rateLimit.resetAt - Date.now()) / 1000).toString(),\n                'X-RateLimit-Limit': '100',\n                'X-RateLimit-Remaining': '0',\n                'X-RateLimit-Reset': rateLimit.resetAt.toString()\n            }\n        });\n    }\n    const url = new URL(`${WC_URL.replace(/\\/$/, \"\")}/${endpoint}`);\n    searchParams.forEach((v, k)=>{\n        if (k !== \"endpoint\" && k !== \"cache\") url.searchParams.set(k, v);\n    });\n    url.searchParams.set(\"consumer_key\", CK || '');\n    url.searchParams.set(\"consumer_secret\", CS || '');\n    console.log('🔍 API Route Debug:');\n    console.log('WC_URL:', WC_URL);\n    console.log('CK:', CK ? 'SET' : 'NOT SET');\n    console.log('CS:', CS ? 'SET' : 'NOT SET');\n    console.log('Final URL:', url.toString());\n    console.log('Bypass cache:', bypassCache);\n    console.log('Search params:', Object.fromEntries(searchParams.entries()));\n    try {\n        // Cache lookup (skip if bypass)\n        const cacheKey = _lib_cache__WEBPACK_IMPORTED_MODULE_1__.cache.generateKey(url.toString());\n        let cached = null;\n        if (!bypassCache) {\n            cached = await _lib_cache__WEBPACK_IMPORTED_MODULE_1__.cache.get(cacheKey);\n        }\n        if (cached) {\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(cached.body, {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"Cache-Control\": `public, max-age=30, s-maxage=60`,\n                    \"ETag\": cached.etag,\n                    \"X-Cache\": \"HIT\",\n                    \"X-RateLimit-Limit\": \"100\",\n                    \"X-RateLimit-Remaining\": rateLimit.remaining.toString(),\n                    \"X-RateLimit-Reset\": rateLimit.resetAt.toString(),\n                    ...cached.headers\n                }\n            });\n        }\n        // Retry logic for better reliability\n        let lastError = null;\n        for(let attempt = 1; attempt <= 3; attempt++){\n            try {\n                console.log(`🔄 Attempt ${attempt} for ${url.toString()}`);\n                const r = await fetch(url.toString(), {\n                    headers: {\n                        Accept: \"application/json\",\n                        'User-Agent': 'Filler-Store/1.0'\n                    },\n                    cache: \"no-store\"\n                });\n                const text = await r.text();\n                if (!r.ok) {\n                    console.log(`❌ HTTP ${r.status}: ${text}`);\n                    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(text || r.statusText, {\n                        status: r.status,\n                        headers: {\n                            \"content-type\": r.headers.get(\"content-type\") || \"text/plain\"\n                        }\n                    });\n                }\n                // Check if response is HTML instead of JSON (WordPress error page)\n                if (text.trim().startsWith('<!DOCTYPE html>') || text.trim().startsWith('<html')) {\n                    console.log(`❌ WordPress returned HTML instead of JSON: ${text.substring(0, 100)}...`);\n                    // Try to get cached data first\n                    if (!bypassCache && redis && typeof redis.get === 'function') {\n                        try {\n                            const cachedData = await redis.get(cacheKey);\n                            if (cachedData) {\n                                console.log('✅ Using cached data as fallback');\n                                return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(cachedData, {\n                                    status: 200,\n                                    headers: {\n                                        'content-type': 'application/json'\n                                    }\n                                });\n                            }\n                        } catch  {\n                            console.log('⚠️ Redis not available, skipping cache fallback');\n                        }\n                    }\n                    // Retry the request once more\n                    console.log('🔄 Retrying request...');\n                    const retryResponse = await fetch(url, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            Accept: \"application/json\",\n                            'User-Agent': 'Filler-Store/1.0'\n                        },\n                        cache: \"no-store\"\n                    });\n                    if (retryResponse.ok) {\n                        const retryText = await retryResponse.text();\n                        if (!retryText.trim().startsWith('<!DOCTYPE html>') && !retryText.trim().startsWith('<html')) {\n                            console.log('✅ Retry successful, returning data');\n                            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(retryText, {\n                                status: 200,\n                                headers: {\n                                    'content-type': 'application/json'\n                                }\n                            });\n                        }\n                    }\n                    // Return empty data instead of error to prevent app crashes\n                    console.log('⚠️ Returning empty data as fallback');\n                    const emptyResponse = {\n                        data: [],\n                        total: 0,\n                        totalPages: 0,\n                        currentPage: 1,\n                        perPage: 10,\n                        error: 'API tymczasowo niedostępne'\n                    };\n                    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify(emptyResponse), {\n                        status: 200,\n                        headers: {\n                            'content-type': 'application/json'\n                        }\n                    });\n                }\n                console.log(`✅ Success on attempt ${attempt}`);\n                // Populate cache (skip if bypass)\n                if (!bypassCache) {\n                    await _lib_cache__WEBPACK_IMPORTED_MODULE_1__.cache.set(cacheKey, text, 60000, {\n                        'X-Response-Time': `${Date.now() - Date.now()}ms`,\n                        'X-Attempt': attempt.toString()\n                    });\n                }\n                const etag = _lib_cache__WEBPACK_IMPORTED_MODULE_1__.cache.generateETag(text);\n                return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(text, {\n                    status: 200,\n                    headers: {\n                        \"content-type\": \"application/json\",\n                        \"Cache-Control\": `public, max-age=30, s-maxage=60`,\n                        \"ETag\": etag,\n                        \"X-Cache\": bypassCache ? \"BYPASS\" : \"MISS\",\n                        \"X-RateLimit-Limit\": \"100\",\n                        \"X-RateLimit-Remaining\": rateLimit.remaining.toString(),\n                        \"X-RateLimit-Reset\": rateLimit.resetAt.toString()\n                    }\n                });\n            } catch (error) {\n                lastError = error;\n                console.log(`❌ Attempt ${attempt} failed:`, error);\n                if (attempt < 3) {\n                    // Wait before retry (exponential backoff)\n                    await new Promise((resolve)=>setTimeout(resolve, attempt * 1000));\n                }\n            }\n        }\n        // All attempts failed\n        throw lastError;\n    } catch (e) {\n        console.error('🚨 All attempts failed:', e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Błąd serwera proxy\",\n            message: e instanceof Error ? e.message : String(e)\n        }, {\n            status: 502\n        });\n    }\n}\nasync function POST(req) {\n    const { searchParams } = new URL(req.url);\n    const endpoint = searchParams.get(\"endpoint\") || \"products\";\n    console.log('🔄 POST request to endpoint:', endpoint);\n    try {\n        const body = await req.json();\n        // Special handling for password reset\n        if (endpoint === 'customers/password-reset') {\n            console.log('🔄 Handling password reset request');\n            return await handlePasswordReset(body);\n        }\n        // Special handling for password reset confirmation\n        if (endpoint === 'customers/reset-password') {\n            console.log('🔄 Handling password reset confirm request');\n            return await handlePasswordResetConfirm(body);\n        }\n        // Special handling for customer invoices\n        if (endpoint === 'customers/invoices') {\n            console.log('🔄 Handling customer invoices request');\n            return await handleCustomerInvoices(req);\n        }\n        // Special handling for order creation\n        if (endpoint === 'orders') {\n            console.log('🔄 Handling order creation request');\n            return await handleOrderCreation(body);\n        }\n        // Special handling for order tracking\n        if (endpoint === 'orders/tracking') {\n            console.log('🔄 Handling order tracking request');\n            return await handleOrderTracking(req);\n        }\n        // Special handling for customer profile update\n        if (endpoint === 'customer/update-profile') {\n            console.log('🔄 Handling customer profile update request');\n            return await handleCustomerProfileUpdate(body);\n        }\n        // Special handling for customer password change\n        if (endpoint === 'customer/change-password') {\n            console.log('🔄 Handling customer password change request');\n            return await handleCustomerPasswordChange(body);\n        }\n        // Special handling for customer invoices\n        if (endpoint === 'customers/invoices') {\n            console.log('🔄 Handling customer invoices request');\n            return await handleCustomerInvoices(req);\n        }\n        console.log('🔄 Using standard WooCommerce endpoint:', endpoint);\n        const url = new URL(`${WC_URL?.replace(/\\/$/, \"\") || 'https://qvwltjhdjw.cfolks.pl/wp-json/wc/v3'}/${endpoint}`);\n        url.searchParams.set(\"consumer_key\", CK || '');\n        url.searchParams.set(\"consumer_secret\", CS || '');\n        // Retry logic for POST requests too\n        let lastError = null;\n        for(let attempt = 1; attempt <= 3; attempt++){\n            try {\n                console.log(`🔄 POST Attempt ${attempt} for ${url.toString()}`);\n                const r = await fetch(url.toString(), {\n                    method: 'POST',\n                    headers: {\n                        Accept: \"application/json\",\n                        'Content-Type': 'application/json',\n                        'User-Agent': 'Filler-Store/1.0'\n                    },\n                    body: JSON.stringify(body),\n                    cache: \"no-store\"\n                });\n                const text = await r.text();\n                if (!r.ok) {\n                    console.log(`❌ POST HTTP ${r.status}: ${text}`);\n                    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(text || r.statusText, {\n                        status: r.status,\n                        headers: {\n                            \"content-type\": r.headers.get(\"content-type\") || \"text/plain\"\n                        }\n                    });\n                }\n                console.log(`✅ POST Success on attempt ${attempt}`);\n                return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(text, {\n                    status: 200,\n                    headers: {\n                        \"content-type\": \"application/json\"\n                    }\n                });\n            } catch (error) {\n                lastError = error;\n                console.log(`❌ POST Attempt ${attempt} failed:`, error);\n                if (attempt < 3) {\n                    await new Promise((resolve)=>setTimeout(resolve, attempt * 1000));\n                }\n            }\n        }\n        throw lastError;\n    } catch (e) {\n        console.error('🚨 POST All attempts failed:', e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Błąd serwera proxy\",\n            message: e instanceof Error ? e.message : String(e)\n        }, {\n            status: 502\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/woocommerce/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/cache.ts":
/*!**************************!*\
  !*** ./src/lib/cache.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheManager: () => (/* binding */ CacheManager),\n/* harmony export */   cache: () => (/* binding */ cache)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n// Production-grade cache layer with Redis fallback\n\nconst memoryCache = new Map();\nconst DEFAULT_TTL_MS = 60 * 1000; // 60s\nconst MAX_MEMORY_ENTRIES = 1000;\n// Rate limiting store\nconst rateLimitStore = new Map();\nconst RATE_LIMIT_WINDOW = 60 * 1000; // 1 minute\nconst RATE_LIMIT_MAX_REQUESTS = 100; // per IP per minute\nclass CacheManager {\n    static getInstance() {\n        if (!CacheManager.instance) {\n            CacheManager.instance = new CacheManager();\n        }\n        return CacheManager.instance;\n    }\n    // Generate cache key from URL\n    generateKey(url, method = 'GET') {\n        return `cache:${method}:${crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash('md5').update(url).digest('hex')}`;\n    }\n    // Generate ETag from content\n    generateETag(content) {\n        return `\"${crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash('md5').update(content).digest('hex').slice(0, 16)}\"`;\n    }\n    // Get from cache\n    async get(key) {\n        const entry = memoryCache.get(key);\n        if (!entry) return null;\n        if (Date.now() > entry.expiresAt) {\n            memoryCache.delete(key);\n            return null;\n        }\n        return {\n            body: entry.body,\n            etag: entry.etag,\n            headers: entry.headers\n        };\n    }\n    // Set in cache\n    async set(key, body, ttlMs = DEFAULT_TTL_MS, headers = {}) {\n        const etag = this.generateETag(body);\n        // Cleanup old entries if cache is full\n        if (memoryCache.size >= MAX_MEMORY_ENTRIES) {\n            const oldestKey = memoryCache.keys().next().value;\n            if (oldestKey) memoryCache.delete(oldestKey);\n        }\n        memoryCache.set(key, {\n            body,\n            expiresAt: Date.now() + ttlMs,\n            etag,\n            headers\n        });\n    }\n    // Delete from cache\n    async delete(key) {\n        memoryCache.delete(key);\n    }\n    // Clear all cache\n    async clear() {\n        memoryCache.clear();\n    }\n    // Purge cache by pattern\n    async purge(pattern) {\n        let deleted = 0;\n        for (const key of memoryCache.keys()){\n            if (key.includes(pattern)) {\n                memoryCache.delete(key);\n                deleted++;\n            }\n        }\n        return deleted;\n    }\n    // Rate limiting\n    checkRateLimit(ip) {\n        const now = Date.now();\n        const key = `rate:${ip}`;\n        const entry = rateLimitStore.get(key);\n        if (!entry || now > entry.resetAt) {\n            // Reset or create new entry\n            rateLimitStore.set(key, {\n                count: 1,\n                resetAt: now + RATE_LIMIT_WINDOW\n            });\n            return {\n                allowed: true,\n                remaining: RATE_LIMIT_MAX_REQUESTS - 1,\n                resetAt: now + RATE_LIMIT_WINDOW\n            };\n        }\n        if (entry.count >= RATE_LIMIT_MAX_REQUESTS) {\n            return {\n                allowed: false,\n                remaining: 0,\n                resetAt: entry.resetAt\n            };\n        }\n        entry.count++;\n        return {\n            allowed: true,\n            remaining: RATE_LIMIT_MAX_REQUESTS - entry.count,\n            resetAt: entry.resetAt\n        };\n    }\n    // Get cache stats\n    getStats() {\n        return {\n            size: memoryCache.size,\n            entries: memoryCache.size,\n            rateLimitEntries: rateLimitStore.size\n        };\n    }\n}\nconst cache = CacheManager.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cache.ts\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fwoocommerce%2Froute&page=%2Fapi%2Fwoocommerce%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwoocommerce%2Froute.ts&appDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkingbrand%2FDesktop%2Fheadless-woo%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();