// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/checkout/page.tsx
{
  const handler = {} as typeof import("../../src/app/checkout/page.js")
  handler satisfies AppPageConfig<"/checkout">
}

// Validate ../../src/app/kontakt/page.tsx
{
  const handler = {} as typeof import("../../src/app/kontakt/page.js")
  handler satisfies AppPageConfig<"/kontakt">
}

// Validate ../../src/app/koszyk/page.tsx
{
  const handler = {} as typeof import("../../src/app/koszyk/page.js")
  handler satisfies AppPageConfig<"/koszyk">
}

// Validate ../../src/app/lista-zyczen/page.tsx
{
  const handler = {} as typeof import("../../src/app/lista-zyczen/page.js")
  handler satisfies AppPageConfig<"/lista-zyczen">
}

// Validate ../../src/app/moje-faktury/page.tsx
{
  const handler = {} as typeof import("../../src/app/moje-faktury/page.js")
  handler satisfies AppPageConfig<"/moje-faktury">
}

// Validate ../../src/app/moje-konto/page.tsx
{
  const handler = {} as typeof import("../../src/app/moje-konto/page.js")
  handler satisfies AppPageConfig<"/moje-konto">
}

// Validate ../../src/app/moje-zamowienia/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/moje-zamowienia/[id]/page.js")
  handler satisfies AppPageConfig<"/moje-zamowienia/[id]">
}

// Validate ../../src/app/moje-zamowienia/page.tsx
{
  const handler = {} as typeof import("../../src/app/moje-zamowienia/page.js")
  handler satisfies AppPageConfig<"/moje-zamowienia">
}

// Validate ../../src/app/o-nas/page.tsx
{
  const handler = {} as typeof import("../../src/app/o-nas/page.js")
  handler satisfies AppPageConfig<"/o-nas">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/polityka-prywatnosci/page.tsx
{
  const handler = {} as typeof import("../../src/app/polityka-prywatnosci/page.js")
  handler satisfies AppPageConfig<"/polityka-prywatnosci">
}

// Validate ../../src/app/produkt/[slug]/page.tsx
{
  const handler = {} as typeof import("../../src/app/produkt/[slug]/page.js")
  handler satisfies AppPageConfig<"/produkt/[slug]">
}

// Validate ../../src/app/regulamin/page.tsx
{
  const handler = {} as typeof import("../../src/app/regulamin/page.js")
  handler satisfies AppPageConfig<"/regulamin">
}

// Validate ../../src/app/reset-hasla/page.tsx
{
  const handler = {} as typeof import("../../src/app/reset-hasla/page.js")
  handler satisfies AppPageConfig<"/reset-hasla">
}

// Validate ../../src/app/sklep/page.tsx
{
  const handler = {} as typeof import("../../src/app/sklep/page.js")
  handler satisfies AppPageConfig<"/sklep">
}

// Validate ../../src/app/wyszukiwanie/page.tsx
{
  const handler = {} as typeof import("../../src/app/wyszukiwanie/page.js")
  handler satisfies AppPageConfig<"/wyszukiwanie">
}

// Validate ../../src/app/api/cache/purge/route.ts
{
  const handler = {} as typeof import("../../src/app/api/cache/purge/route.js")
  handler satisfies RouteHandlerConfig<"/api/cache/purge">
}

// Validate ../../src/app/api/cart-proxy/route.ts
{
  const handler = {} as typeof import("../../src/app/api/cart-proxy/route.js")
  handler satisfies RouteHandlerConfig<"/api/cart-proxy">
}

// Validate ../../src/app/api/favorites/route.ts
{
  const handler = {} as typeof import("../../src/app/api/favorites/route.js")
  handler satisfies RouteHandlerConfig<"/api/favorites">
}

// Validate ../../src/app/api/favorites/sync/route.ts
{
  const handler = {} as typeof import("../../src/app/api/favorites/sync/route.js")
  handler satisfies RouteHandlerConfig<"/api/favorites/sync">
}

// Validate ../../src/app/api/home-feed/route.ts
{
  const handler = {} as typeof import("../../src/app/api/home-feed/route.js")
  handler satisfies RouteHandlerConfig<"/api/home-feed">
}

// Validate ../../src/app/api/newsletter/subscribe/route.ts
{
  const handler = {} as typeof import("../../src/app/api/newsletter/subscribe/route.js")
  handler satisfies RouteHandlerConfig<"/api/newsletter/subscribe">
}

// Validate ../../src/app/api/revalidate/route.ts
{
  const handler = {} as typeof import("../../src/app/api/revalidate/route.js")
  handler satisfies RouteHandlerConfig<"/api/revalidate">
}

// Validate ../../src/app/api/reviews/route.ts
{
  const handler = {} as typeof import("../../src/app/api/reviews/route.js")
  handler satisfies RouteHandlerConfig<"/api/reviews">
}

// Validate ../../src/app/api/send-discount-email/route.ts
{
  const handler = {} as typeof import("../../src/app/api/send-discount-email/route.js")
  handler satisfies RouteHandlerConfig<"/api/send-discount-email">
}

// Validate ../../src/app/api/send-email/route.ts
{
  const handler = {} as typeof import("../../src/app/api/send-email/route.js")
  handler satisfies RouteHandlerConfig<"/api/send-email">
}

// Validate ../../src/app/api/send-newsletter-email/route.ts
{
  const handler = {} as typeof import("../../src/app/api/send-newsletter-email/route.js")
  handler satisfies RouteHandlerConfig<"/api/send-newsletter-email">
}

// Validate ../../src/app/api/test/route.ts
{
  const handler = {} as typeof import("../../src/app/api/test/route.js")
  handler satisfies RouteHandlerConfig<"/api/test">
}

// Validate ../../src/app/api/woocommerce/route.ts
{
  const handler = {} as typeof import("../../src/app/api/woocommerce/route.js")
  handler satisfies RouteHandlerConfig<"/api/woocommerce">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
