import { z } from 'zod';

// Design tokens schema for UI theming
export const TokensSchema = z.object({
  colors: z.object({
    primary: z.object({
      50: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      100: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      200: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      300: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      400: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      500: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      600: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      700: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      800: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      900: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      950: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    }),
    secondary: z.object({
      50: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      100: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      200: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      300: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      400: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      500: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      600: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      700: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      800: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      900: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      950: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    }),
    accent: z.object({
      50: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      100: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      200: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      300: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      400: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      500: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      600: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      700: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      800: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      900: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      950: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    }),
    neutral: z.object({
      50: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      100: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      200: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      300: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      400: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      500: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      600: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      700: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      800: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      900: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
      950: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    }),
    success: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    warning: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    error: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
    info: z.string().regex(/^#[0-9A-Fa-f]{6}$/),
  }),
  typography: z.object({
    fontFamily: z.object({
      sans: z.array(z.string()),
      serif: z.array(z.string()),
      mono: z.array(z.string()),
    }),
    fontSize: z.object({
      xs: z.string(),
      sm: z.string(),
      base: z.string(),
      lg: z.string(),
      xl: z.string(),
      '2xl': z.string(),
      '3xl': z.string(),
      '4xl': z.string(),
      '5xl': z.string(),
      '6xl': z.string(),
    }),
    fontWeight: z.object({
      light: z.number(),
      normal: z.number(),
      medium: z.number(),
      semibold: z.number(),
      bold: z.number(),
    }),
    lineHeight: z.object({
      tight: z.string(),
      normal: z.string(),
      relaxed: z.string(),
    }),
  }),
  spacing: z.object({
    0: z.string(),
    1: z.string(),
    2: z.string(),
    3: z.string(),
    4: z.string(),
    5: z.string(),
    6: z.string(),
    8: z.string(),
    10: z.string(),
    12: z.string(),
    16: z.string(),
    20: z.string(),
    24: z.string(),
    32: z.string(),
    40: z.string(),
    48: z.string(),
    56: z.string(),
    64: z.string(),
  }),
  borderRadius: z.object({
    none: z.string(),
    sm: z.string(),
    md: z.string(),
    lg: z.string(),
    xl: z.string(),
    '2xl': z.string(),
    '3xl': z.string(),
    full: z.string(),
  }),
  shadows: z.object({
    sm: z.string(),
    md: z.string(),
    lg: z.string(),
    xl: z.string(),
    '2xl': z.string(),
    inner: z.string(),
    none: z.string(),
  }),
  uiStyle: z.enum(['minimal', 'rounded', 'neumorphic', 'glass', 'classic']),
  buttonStyle: z.enum(['filled', 'outline', 'ghost', 'gradient']),
});

export type Tokens = z.infer<typeof TokensSchema>;
